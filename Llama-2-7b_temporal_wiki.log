You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
results_new/neo125_github_experiment/meta-llama_Llama-2-7b-hf/temporal_wiki
Saving results to absolute path: /home/chawins/mimir/tmp_results/neo125_github_experiment/meta-llama_Llama-2-7b-hf/temporal_wiki
LOG: cache_dir is /home/chawins/.cache
Using cache dir /home/chawins/.cache
Loading BASE model meta-llama/Llama-2-7b-hf...
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.embed_tokens.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.0.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.1.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.2.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.3.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.4.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.5.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.6.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.7.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.8.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.9.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.10.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.11.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.12.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.13.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.14.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.15.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.16.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.17.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.18.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.19.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.20.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.21.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.22.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.23.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.04it/s]/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.24.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.25.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.26.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.27.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.28.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.29.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.30.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.self_attn.q_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.self_attn.k_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.self_attn.v_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.self_attn.o_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.mlp.gate_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.mlp.up_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.mlp.down_proj.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.input_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.layers.31.post_attention_layernorm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for model.norm.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
/home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/torch/nn/modules/module.py:2025: UserWarning: for lm_head.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(f'for {key}: copying from a non-meta parameter in the checkpoint to a meta '
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.32it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.27it/s]
self.device: cuda:0
Loading BASE model stabilityai/stablelm-base-alpha-3b-v2...
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.48s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.17it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.06it/s]
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
[2] MOVING BASE MODEL TO GPU.../home/chawins/.conda/envs/mimir/lib/python3.9/site-packages/datasets/load.py:1461: FutureWarning: The repository for iamgroot42/mimir contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/iamgroot42/mimir
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
Loading dataset the_pile...
Loading from HuggingFace!
Loading dataset the_pile...
Loading from HuggingFace!
Generating samples:   0%|          | 0/21 [00:00<?, ?it/s]Generating samples: 100%|██████████| 21/21 [00:00<00:00, 891.54it/s]
NEW N_SAMPLES IS  1000
Writing raw data to tmp_results/neo125_github_experiment/meta-llama_Llama-2-7b-hf/temporal_wiki/raw_data.json
Writing raw data to tmp_results/neo125_github_experiment/meta-llama_Llama-2-7b-hf/temporal_wiki/raw_data_lens.json
Computing criterion:   0%|          | 0/20 [00:00<?, ?it/s]Computing criterion:   5%|▌         | 1/20 [00:09<02:53,  9.12s/it]Computing criterion:  10%|█         | 2/20 [00:12<01:46,  5.90s/it]Computing criterion:  15%|█▌        | 3/20 [00:16<01:25,  5.04s/it]Computing criterion:  20%|██        | 4/20 [00:20<01:14,  4.67s/it]Computing criterion:  25%|██▌       | 5/20 [00:25<01:09,  4.62s/it]Computing criterion:  30%|███       | 6/20 [00:29<01:01,  4.36s/it]Computing criterion:  35%|███▌      | 7/20 [00:33<00:55,  4.23s/it]Computing criterion:  40%|████      | 8/20 [00:37<00:49,  4.10s/it]Computing criterion:  45%|████▌     | 9/20 [00:41<00:45,  4.11s/it]Computing criterion:  50%|█████     | 10/20 [00:45<00:42,  4.24s/it]Computing criterion:  55%|█████▌    | 11/20 [00:50<00:38,  4.32s/it]Computing criterion:  60%|██████    | 12/20 [00:54<00:33,  4.21s/it]Computing criterion:  65%|██████▌   | 13/20 [00:58<00:28,  4.09s/it]Computing criterion:  70%|███████   | 14/20 [01:01<00:24,  4.02s/it]Computing criterion:  75%|███████▌  | 15/20 [01:05<00:20,  4.00s/it]Computing criterion:  80%|████████  | 16/20 [01:09<00:15,  3.98s/it]Computing criterion:  85%|████████▌ | 17/20 [01:13<00:11,  3.90s/it]Computing criterion:  90%|█████████ | 18/20 [01:17<00:08,  4.02s/it]Computing criterion:  95%|█████████▌| 19/20 [01:21<00:04,  4.06s/it]Computing criterion: 100%|██████████| 20/20 [01:25<00:00,  4.06s/it]Computing criterion: 100%|██████████| 20/20 [01:25<00:00,  4.30s/it]
Ref scores:   0%|          | 0/1000 [00:00<?, ?it/s]Ref scores:   0%|          | 1/1000 [00:08<2:14:04,  8.05s/it]Ref scores:   0%|          | 2/1000 [00:08<56:53,  3.42s/it]  Ref scores:   0%|          | 3/1000 [00:08<32:21,  1.95s/it]Ref scores:   0%|          | 4/1000 [00:08<20:52,  1.26s/it]Ref scores:   0%|          | 5/1000 [00:08<14:14,  1.16it/s]Ref scores:   1%|          | 6/1000 [00:08<10:23,  1.59it/s]Ref scores:   1%|          | 7/1000 [00:09<08:17,  2.00it/s]Ref scores:   1%|          | 8/1000 [00:09<06:16,  2.64it/s]Ref scores:   1%|          | 9/1000 [00:09<04:52,  3.39it/s]Ref scores:   1%|          | 11/1000 [00:09<03:22,  4.88it/s]Ref scores:   1%|          | 12/1000 [00:09<03:24,  4.83it/s]Ref scores:   1%|▏         | 13/1000 [00:10<03:18,  4.97it/s]Ref scores:   1%|▏         | 14/1000 [00:10<03:16,  5.02it/s]Ref scores:   2%|▏         | 15/1000 [00:10<03:11,  5.14it/s]Ref scores:   2%|▏         | 16/1000 [00:10<02:46,  5.91it/s]Ref scores:   2%|▏         | 17/1000 [00:10<02:52,  5.70it/s]Ref scores:   2%|▏         | 18/1000 [00:10<02:53,  5.67it/s]Ref scores:   2%|▏         | 19/1000 [00:11<02:57,  5.52it/s]Ref scores:   2%|▏         | 20/1000 [00:11<03:05,  5.28it/s]Ref scores:   2%|▏         | 21/1000 [00:11<02:42,  6.02it/s]Ref scores:   2%|▏         | 22/1000 [00:11<02:45,  5.92it/s]Ref scores:   2%|▏         | 23/1000 [00:11<02:47,  5.82it/s]Ref scores:   2%|▏         | 24/1000 [00:11<02:52,  5.67it/s]Ref scores:   2%|▎         | 25/1000 [00:12<02:51,  5.68it/s]Ref scores:   3%|▎         | 26/1000 [00:12<02:47,  5.83it/s]Ref scores:   3%|▎         | 27/1000 [00:12<02:50,  5.69it/s]Ref scores:   3%|▎         | 28/1000 [00:12<02:52,  5.63it/s]Ref scores:   3%|▎         | 29/1000 [00:12<03:03,  5.30it/s]Ref scores:   3%|▎         | 30/1000 [00:13<03:02,  5.32it/s]Ref scores:   3%|▎         | 31/1000 [00:13<03:06,  5.21it/s]Ref scores:   3%|▎         | 32/1000 [00:13<02:42,  5.96it/s]Ref scores:   3%|▎         | 33/1000 [00:13<02:50,  5.68it/s]Ref scores:   3%|▎         | 34/1000 [00:13<02:43,  5.92it/s]Ref scores:   4%|▎         | 36/1000 [00:13<02:29,  6.44it/s]Ref scores:   4%|▎         | 37/1000 [00:14<02:36,  6.14it/s]Ref scores:   4%|▍         | 38/1000 [00:14<02:39,  6.02it/s]Ref scores:   4%|▍         | 39/1000 [00:14<02:26,  6.55it/s]Ref scores:   4%|▍         | 40/1000 [00:14<02:33,  6.26it/s]Ref scores:   4%|▍         | 41/1000 [00:14<02:42,  5.92it/s]Ref scores:   4%|▍         | 42/1000 [00:14<02:25,  6.59it/s]Ref scores:   4%|▍         | 43/1000 [00:15<02:35,  6.17it/s]Ref scores:   4%|▍         | 44/1000 [00:15<02:40,  5.96it/s]Ref scores:   4%|▍         | 45/1000 [00:15<02:50,  5.60it/s]Ref scores:   5%|▍         | 46/1000 [00:15<02:53,  5.49it/s]Ref scores:   5%|▍         | 47/1000 [00:15<02:53,  5.51it/s]Ref scores:   5%|▍         | 48/1000 [00:16<02:44,  5.80it/s]Ref scores:   5%|▍         | 49/1000 [00:16<02:45,  5.76it/s]Ref scores:   5%|▌         | 50/1000 [00:16<02:47,  5.67it/s]Ref scores:   5%|▌         | 51/1000 [00:16<02:48,  5.64it/s]Ref scores:   5%|▌         | 52/1000 [00:16<02:26,  6.49it/s]Ref scores:   5%|▌         | 53/1000 [00:16<02:35,  6.08it/s]Ref scores:   6%|▌         | 55/1000 [00:17<02:28,  6.39it/s]Ref scores:   6%|▌         | 56/1000 [00:17<02:43,  5.78it/s]Ref scores:   6%|▌         | 57/1000 [00:17<02:41,  5.83it/s]Ref scores:   6%|▌         | 58/1000 [00:17<02:43,  5.75it/s]Ref scores:   6%|▌         | 59/1000 [00:17<02:45,  5.70it/s]Ref scores:   6%|▌         | 60/1000 [00:18<02:48,  5.60it/s]Ref scores:   6%|▌         | 61/1000 [00:18<02:43,  5.74it/s]Ref scores:   6%|▌         | 62/1000 [00:18<02:38,  5.92it/s]Ref scores:   6%|▋         | 63/1000 [00:18<02:43,  5.73it/s]Ref scores:   6%|▋         | 64/1000 [00:18<02:47,  5.59it/s]Ref scores:   6%|▋         | 65/1000 [00:18<02:45,  5.63it/s]Ref scores:   7%|▋         | 66/1000 [00:19<02:27,  6.32it/s]Ref scores:   7%|▋         | 68/1000 [00:19<02:18,  6.74it/s]Ref scores:   7%|▋         | 69/1000 [00:19<02:19,  6.69it/s]Ref scores:   7%|▋         | 70/1000 [00:19<02:20,  6.63it/s]Ref scores:   7%|▋         | 71/1000 [00:19<02:28,  6.25it/s]Ref scores:   7%|▋         | 72/1000 [00:20<02:34,  6.00it/s]Ref scores:   7%|▋         | 73/1000 [00:20<02:42,  5.70it/s]Ref scores:   7%|▋         | 74/1000 [00:20<02:49,  5.46it/s]Ref scores:   8%|▊         | 75/1000 [00:20<02:59,  5.16it/s]Ref scores:   8%|▊         | 76/1000 [00:20<03:03,  5.04it/s]Ref scores:   8%|▊         | 77/1000 [00:21<03:02,  5.04it/s]Ref scores:   8%|▊         | 78/1000 [00:21<02:59,  5.15it/s]Ref scores:   8%|▊         | 79/1000 [00:21<02:59,  5.14it/s]Ref scores:   8%|▊         | 80/1000 [00:21<02:49,  5.43it/s]Ref scores:   8%|▊         | 81/1000 [00:21<02:57,  5.18it/s]Ref scores:   8%|▊         | 82/1000 [00:21<02:53,  5.30it/s]Ref scores:   8%|▊         | 83/1000 [00:22<02:55,  5.22it/s]Ref scores:   8%|▊         | 84/1000 [00:22<02:52,  5.32it/s]Ref scores:   8%|▊         | 85/1000 [00:22<03:14,  4.69it/s]Ref scores:   9%|▊         | 86/1000 [00:22<03:15,  4.67it/s]Ref scores:   9%|▊         | 87/1000 [00:23<03:07,  4.86it/s]Ref scores:   9%|▉         | 88/1000 [00:23<03:01,  5.03it/s]Ref scores:   9%|▉         | 90/1000 [00:23<02:32,  5.98it/s]Ref scores:   9%|▉         | 91/1000 [00:23<02:36,  5.81it/s]Ref scores:   9%|▉         | 92/1000 [00:23<02:39,  5.69it/s]Ref scores:   9%|▉         | 94/1000 [00:24<02:25,  6.25it/s]Ref scores:  10%|▉         | 95/1000 [00:24<02:38,  5.72it/s]Ref scores:  10%|▉         | 96/1000 [00:24<02:39,  5.67it/s]Ref scores:  10%|▉         | 97/1000 [00:24<02:39,  5.67it/s]Ref scores:  10%|▉         | 98/1000 [00:24<02:39,  5.64it/s]Ref scores:  10%|▉         | 99/1000 [00:24<02:21,  6.37it/s]Ref scores:  10%|█         | 101/1000 [00:25<02:12,  6.76it/s]Ref scores:  10%|█         | 102/1000 [00:25<02:19,  6.46it/s]Ref scores:  10%|█         | 103/1000 [00:25<02:25,  6.16it/s]Ref scores:  10%|█         | 104/1000 [00:25<02:35,  5.75it/s]Ref scores:  10%|█         | 105/1000 [00:25<02:29,  5.99it/s]Ref scores:  11%|█         | 106/1000 [00:26<02:31,  5.89it/s]Ref scores:  11%|█         | 107/1000 [00:26<02:53,  5.15it/s]Ref scores:  11%|█         | 108/1000 [00:26<02:49,  5.25it/s]Ref scores:  11%|█         | 109/1000 [00:26<02:46,  5.35it/s]Ref scores:  11%|█         | 110/1000 [00:26<02:51,  5.20it/s]Ref scores:  11%|█         | 111/1000 [00:27<02:55,  5.08it/s]Ref scores:  11%|█         | 112/1000 [00:27<02:51,  5.19it/s]Ref scores:  11%|█▏        | 113/1000 [00:27<02:48,  5.27it/s]Ref scores:  11%|█▏        | 114/1000 [00:27<02:28,  5.99it/s]Ref scores:  12%|█▏        | 115/1000 [00:27<02:39,  5.53it/s]Ref scores:  12%|█▏        | 116/1000 [00:28<02:38,  5.56it/s]Ref scores:  12%|█▏        | 117/1000 [00:28<02:44,  5.36it/s]Ref scores:  12%|█▏        | 118/1000 [00:28<02:41,  5.47it/s]Ref scores:  12%|█▏        | 119/1000 [00:28<02:45,  5.34it/s]Ref scores:  12%|█▏        | 120/1000 [00:28<02:42,  5.40it/s]Ref scores:  12%|█▏        | 121/1000 [00:28<02:41,  5.43it/s]Ref scores:  12%|█▏        | 122/1000 [00:29<02:39,  5.52it/s]Ref scores:  12%|█▏        | 123/1000 [00:29<02:40,  5.47it/s]Ref scores:  12%|█▏        | 124/1000 [00:29<02:38,  5.52it/s]Ref scores:  12%|█▎        | 125/1000 [00:29<02:38,  5.53it/s]Ref scores:  13%|█▎        | 126/1000 [00:29<02:39,  5.49it/s]Ref scores:  13%|█▎        | 127/1000 [00:30<02:48,  5.19it/s]Ref scores:  13%|█▎        | 128/1000 [00:30<02:52,  5.05it/s]Ref scores:  13%|█▎        | 129/1000 [00:30<03:08,  4.62it/s]Ref scores:  13%|█▎        | 130/1000 [00:30<03:01,  4.81it/s]Ref scores:  13%|█▎        | 131/1000 [00:30<02:45,  5.26it/s]Ref scores:  13%|█▎        | 132/1000 [00:31<02:46,  5.21it/s]Ref scores:  13%|█▎        | 133/1000 [00:31<02:44,  5.28it/s]Ref scores:  13%|█▎        | 134/1000 [00:31<02:42,  5.34it/s]Ref scores:  14%|█▎        | 135/1000 [00:31<02:39,  5.42it/s]Ref scores:  14%|█▎        | 136/1000 [00:31<02:31,  5.72it/s]Ref scores:  14%|█▎        | 137/1000 [00:31<02:31,  5.68it/s]Ref scores:  14%|█▍        | 138/1000 [00:32<02:52,  4.99it/s]Ref scores:  14%|█▍        | 139/1000 [00:32<02:40,  5.36it/s]Ref scores:  14%|█▍        | 140/1000 [00:32<02:40,  5.37it/s]Ref scores:  14%|█▍        | 141/1000 [00:32<02:31,  5.65it/s]Ref scores:  14%|█▍        | 142/1000 [00:32<02:37,  5.44it/s]Ref scores:  14%|█▍        | 143/1000 [00:33<02:35,  5.50it/s]Ref scores:  14%|█▍        | 144/1000 [00:33<02:38,  5.40it/s]Ref scores:  14%|█▍        | 145/1000 [00:33<02:56,  4.85it/s]Ref scores:  15%|█▍        | 146/1000 [00:33<02:49,  5.04it/s]Ref scores:  15%|█▍        | 147/1000 [00:33<02:48,  5.05it/s]Ref scores:  15%|█▍        | 148/1000 [00:34<02:43,  5.21it/s]Ref scores:  15%|█▍        | 149/1000 [00:34<02:24,  5.88it/s]Ref scores:  15%|█▌        | 150/1000 [00:34<02:22,  5.97it/s]Ref scores:  15%|█▌        | 151/1000 [00:34<02:22,  5.94it/s]Ref scores:  15%|█▌        | 152/1000 [00:34<02:27,  5.74it/s]Ref scores:  15%|█▌        | 153/1000 [00:34<02:29,  5.66it/s]Ref scores:  15%|█▌        | 154/1000 [00:35<02:28,  5.68it/s]Ref scores:  16%|█▌        | 155/1000 [00:35<02:33,  5.52it/s]Ref scores:  16%|█▌        | 156/1000 [00:35<02:14,  6.26it/s]Ref scores:  16%|█▌        | 157/1000 [00:35<02:27,  5.72it/s]Ref scores:  16%|█▌        | 158/1000 [00:35<02:11,  6.42it/s]Ref scores:  16%|█▌        | 159/1000 [00:35<02:00,  6.96it/s]Ref scores:  16%|█▌        | 160/1000 [00:36<02:11,  6.38it/s]Ref scores:  16%|█▌        | 161/1000 [00:36<02:23,  5.83it/s]Ref scores:  16%|█▌        | 162/1000 [00:36<02:35,  5.37it/s]Ref scores:  16%|█▋        | 163/1000 [00:36<02:41,  5.19it/s]Ref scores:  16%|█▋        | 165/1000 [00:36<02:11,  6.33it/s]Ref scores:  17%|█▋        | 166/1000 [00:37<02:10,  6.37it/s]Ref scores:  17%|█▋        | 167/1000 [00:37<02:14,  6.20it/s]Ref scores:  17%|█▋        | 168/1000 [00:37<02:18,  5.99it/s]Ref scores:  17%|█▋        | 169/1000 [00:37<02:23,  5.78it/s]Ref scores:  17%|█▋        | 170/1000 [00:37<02:26,  5.65it/s]Ref scores:  17%|█▋        | 171/1000 [00:37<02:28,  5.59it/s]Ref scores:  17%|█▋        | 172/1000 [00:38<02:30,  5.51it/s]Ref scores:  17%|█▋        | 173/1000 [00:38<02:38,  5.21it/s]Ref scores:  18%|█▊        | 175/1000 [00:38<02:04,  6.61it/s]Ref scores:  18%|█▊        | 176/1000 [00:38<02:15,  6.07it/s]Ref scores:  18%|█▊        | 177/1000 [00:39<02:24,  5.68it/s]Ref scores:  18%|█▊        | 178/1000 [00:39<02:28,  5.55it/s]Ref scores:  18%|█▊        | 179/1000 [00:39<02:29,  5.48it/s]Ref scores:  18%|█▊        | 180/1000 [00:39<02:36,  5.24it/s]Ref scores:  18%|█▊        | 181/1000 [00:39<02:33,  5.33it/s]Ref scores:  18%|█▊        | 182/1000 [00:39<02:31,  5.40it/s]Ref scores:  18%|█▊        | 183/1000 [00:40<02:33,  5.31it/s]Ref scores:  18%|█▊        | 184/1000 [00:40<02:31,  5.39it/s]Ref scores:  18%|█▊        | 185/1000 [00:40<02:37,  5.19it/s]Ref scores:  19%|█▊        | 186/1000 [00:40<02:28,  5.47it/s]Ref scores:  19%|█▉        | 188/1000 [00:40<02:12,  6.14it/s]Ref scores:  19%|█▉        | 189/1000 [00:41<02:10,  6.22it/s]Ref scores:  19%|█▉        | 190/1000 [00:41<02:14,  6.04it/s]Ref scores:  19%|█▉        | 191/1000 [00:41<02:18,  5.85it/s]Ref scores:  19%|█▉        | 192/1000 [00:41<02:22,  5.66it/s]Ref scores:  19%|█▉        | 193/1000 [00:41<02:09,  6.24it/s]Ref scores:  19%|█▉        | 194/1000 [00:42<02:17,  5.86it/s]Ref scores:  20%|█▉        | 195/1000 [00:42<02:19,  5.76it/s]Ref scores:  20%|█▉        | 196/1000 [00:42<02:27,  5.46it/s]Ref scores:  20%|█▉        | 197/1000 [00:42<02:28,  5.42it/s]Ref scores:  20%|█▉        | 198/1000 [00:42<02:20,  5.70it/s]Ref scores:  20%|█▉        | 199/1000 [00:42<02:21,  5.68it/s]Ref scores:  20%|██        | 200/1000 [00:43<02:22,  5.62it/s]Ref scores:  20%|██        | 201/1000 [00:43<02:18,  5.76it/s]Ref scores:  20%|██        | 202/1000 [00:43<02:18,  5.74it/s]Ref scores:  20%|██        | 203/1000 [00:43<02:18,  5.74it/s]Ref scores:  20%|██        | 204/1000 [00:43<02:21,  5.63it/s]Ref scores:  20%|██        | 205/1000 [00:43<02:19,  5.69it/s]Ref scores:  21%|██        | 207/1000 [00:44<01:51,  7.10it/s]Ref scores:  21%|██        | 209/1000 [00:44<01:48,  7.28it/s]Ref scores:  21%|██        | 210/1000 [00:44<02:07,  6.17it/s]Ref scores:  21%|██        | 211/1000 [00:44<02:17,  5.74it/s]Ref scores:  21%|██▏       | 213/1000 [00:45<02:04,  6.30it/s]Ref scores:  21%|██▏       | 214/1000 [00:45<02:09,  6.06it/s]Ref scores:  22%|██▏       | 215/1000 [00:45<02:08,  6.12it/s]Ref scores:  22%|██▏       | 216/1000 [00:45<02:28,  5.29it/s]Ref scores:  22%|██▏       | 217/1000 [00:45<02:26,  5.34it/s]Ref scores:  22%|██▏       | 218/1000 [00:46<02:30,  5.20it/s]Ref scores:  22%|██▏       | 219/1000 [00:46<02:23,  5.43it/s]Ref scores:  22%|██▏       | 220/1000 [00:46<02:21,  5.52it/s]Ref scores:  22%|██▏       | 221/1000 [00:46<02:21,  5.52it/s]Ref scores:  22%|██▏       | 222/1000 [00:46<02:22,  5.45it/s]Ref scores:  22%|██▏       | 223/1000 [00:47<02:22,  5.46it/s]Ref scores:  22%|██▏       | 224/1000 [00:47<02:16,  5.67it/s]Ref scores:  22%|██▎       | 225/1000 [00:47<02:35,  4.99it/s]Ref scores:  23%|██▎       | 226/1000 [00:47<02:32,  5.09it/s]Ref scores:  23%|██▎       | 227/1000 [00:47<02:31,  5.11it/s]Ref scores:  23%|██▎       | 228/1000 [00:48<02:30,  5.13it/s]Ref scores:  23%|██▎       | 229/1000 [00:48<02:26,  5.26it/s]Ref scores:  23%|██▎       | 230/1000 [00:48<02:24,  5.33it/s]Ref scores:  23%|██▎       | 231/1000 [00:48<02:40,  4.80it/s]Ref scores:  23%|██▎       | 232/1000 [00:48<02:35,  4.95it/s]Ref scores:  23%|██▎       | 233/1000 [00:49<02:30,  5.08it/s]Ref scores:  23%|██▎       | 234/1000 [00:49<02:12,  5.79it/s]Ref scores:  24%|██▎       | 235/1000 [00:49<02:14,  5.68it/s]Ref scores:  24%|██▎       | 236/1000 [00:49<02:26,  5.22it/s]Ref scores:  24%|██▎       | 237/1000 [00:49<02:24,  5.29it/s]Ref scores:  24%|██▍       | 238/1000 [00:49<02:23,  5.31it/s]Ref scores:  24%|██▍       | 239/1000 [00:50<02:06,  6.00it/s]Ref scores:  24%|██▍       | 240/1000 [00:50<02:13,  5.71it/s]Ref scores:  24%|██▍       | 241/1000 [00:50<02:24,  5.26it/s]Ref scores:  24%|██▍       | 242/1000 [00:50<02:20,  5.41it/s]Ref scores:  24%|██▍       | 243/1000 [00:50<02:03,  6.12it/s]Ref scores:  24%|██▍       | 244/1000 [00:50<02:06,  5.95it/s]Ref scores:  24%|██▍       | 245/1000 [00:51<02:09,  5.83it/s]Ref scores:  25%|██▍       | 246/1000 [00:51<02:13,  5.66it/s]Ref scores:  25%|██▍       | 247/1000 [00:51<02:15,  5.56it/s]Ref scores:  25%|██▍       | 248/1000 [00:51<02:15,  5.54it/s]Ref scores:  25%|██▍       | 249/1000 [00:51<02:22,  5.29it/s]Ref scores:  25%|██▌       | 250/1000 [00:52<02:22,  5.27it/s]Ref scores:  25%|██▌       | 251/1000 [00:52<02:25,  5.14it/s]Ref scores:  25%|██▌       | 252/1000 [00:52<02:25,  5.13it/s]Ref scores:  25%|██▌       | 253/1000 [00:52<02:21,  5.26it/s]Ref scores:  25%|██▌       | 254/1000 [00:52<02:20,  5.30it/s]Ref scores:  26%|██▌       | 255/1000 [00:53<02:25,  5.12it/s]Ref scores:  26%|██▌       | 256/1000 [00:53<02:24,  5.14it/s]Ref scores:  26%|██▌       | 257/1000 [00:53<02:22,  5.20it/s]Ref scores:  26%|██▌       | 258/1000 [00:53<02:25,  5.11it/s]Ref scores:  26%|██▌       | 259/1000 [00:53<02:24,  5.14it/s]Ref scores:  26%|██▌       | 260/1000 [00:54<02:23,  5.15it/s]Ref scores:  26%|██▌       | 261/1000 [00:54<02:22,  5.18it/s]Ref scores:  26%|██▌       | 262/1000 [00:54<02:19,  5.30it/s]Ref scores:  26%|██▋       | 264/1000 [00:54<02:21,  5.22it/s]Ref scores:  26%|██▋       | 265/1000 [00:54<02:18,  5.30it/s]Ref scores:  27%|██▋       | 266/1000 [00:55<02:17,  5.33it/s]Ref scores:  27%|██▋       | 267/1000 [00:55<02:27,  4.98it/s]Ref scores:  27%|██▋       | 268/1000 [00:55<02:09,  5.63it/s]Ref scores:  27%|██▋       | 269/1000 [00:55<01:58,  6.15it/s]Ref scores:  27%|██▋       | 270/1000 [00:55<02:02,  5.98it/s]Ref scores:  27%|██▋       | 271/1000 [00:55<02:03,  5.89it/s]Ref scores:  27%|██▋       | 272/1000 [00:56<02:07,  5.69it/s]Ref scores:  27%|██▋       | 273/1000 [00:56<02:03,  5.90it/s]Ref scores:  27%|██▋       | 274/1000 [00:56<02:04,  5.81it/s]Ref scores:  28%|██▊       | 275/1000 [00:56<02:07,  5.68it/s]Ref scores:  28%|██▊       | 276/1000 [00:56<02:02,  5.90it/s]Ref scores:  28%|██▊       | 277/1000 [00:56<01:58,  6.10it/s]Ref scores:  28%|██▊       | 278/1000 [00:57<02:01,  5.94it/s]Ref scores:  28%|██▊       | 279/1000 [00:57<02:03,  5.84it/s]Ref scores:  28%|██▊       | 280/1000 [00:57<01:50,  6.49it/s]Ref scores:  28%|██▊       | 281/1000 [00:57<01:56,  6.18it/s]Ref scores:  28%|██▊       | 282/1000 [00:57<02:02,  5.86it/s]Ref scores:  28%|██▊       | 283/1000 [00:58<02:06,  5.68it/s]Ref scores:  28%|██▊       | 284/1000 [00:58<02:05,  5.69it/s]Ref scores:  28%|██▊       | 285/1000 [00:58<02:08,  5.56it/s]Ref scores:  29%|██▊       | 286/1000 [00:58<02:09,  5.53it/s]Ref scores:  29%|██▊       | 287/1000 [00:58<02:11,  5.42it/s]Ref scores:  29%|██▉       | 289/1000 [00:59<01:55,  6.18it/s]Ref scores:  29%|██▉       | 290/1000 [00:59<02:00,  5.89it/s]Ref scores:  29%|██▉       | 291/1000 [00:59<02:02,  5.77it/s]Ref scores:  29%|██▉       | 292/1000 [00:59<02:03,  5.71it/s]Ref scores:  29%|██▉       | 293/1000 [00:59<01:57,  6.03it/s]Ref scores:  29%|██▉       | 294/1000 [00:59<02:03,  5.71it/s]Ref scores:  30%|██▉       | 295/1000 [01:00<01:59,  5.90it/s]Ref scores:  30%|██▉       | 296/1000 [01:00<02:01,  5.78it/s]Ref scores:  30%|██▉       | 297/1000 [01:00<02:04,  5.66it/s]Ref scores:  30%|██▉       | 299/1000 [01:00<01:53,  6.20it/s]Ref scores:  30%|███       | 300/1000 [01:01<02:21,  4.94it/s]Ref scores:  30%|███       | 301/1000 [01:01<02:17,  5.08it/s]Ref scores:  30%|███       | 302/1000 [01:01<02:20,  4.96it/s]Ref scores:  30%|███       | 303/1000 [01:01<02:21,  4.94it/s]Ref scores:  30%|███       | 304/1000 [01:01<02:17,  5.08it/s]Ref scores:  30%|███       | 305/1000 [01:02<02:15,  5.14it/s]Ref scores:  31%|███       | 306/1000 [01:02<02:16,  5.09it/s]Ref scores:  31%|███       | 307/1000 [01:02<02:27,  4.69it/s]Ref scores:  31%|███       | 308/1000 [01:02<02:24,  4.80it/s]Ref scores:  31%|███       | 310/1000 [01:02<02:03,  5.56it/s]Ref scores:  31%|███       | 311/1000 [01:03<01:59,  5.76it/s]Ref scores:  31%|███       | 312/1000 [01:03<02:01,  5.65it/s]Ref scores:  31%|███▏      | 313/1000 [01:03<01:50,  6.21it/s]Ref scores:  31%|███▏      | 314/1000 [01:03<02:01,  5.62it/s]Ref scores:  32%|███▏      | 315/1000 [01:03<02:03,  5.56it/s]Ref scores:  32%|███▏      | 316/1000 [01:04<02:04,  5.49it/s]Ref scores:  32%|███▏      | 317/1000 [01:04<02:02,  5.57it/s]Ref scores:  32%|███▏      | 318/1000 [01:04<02:04,  5.47it/s]Ref scores:  32%|███▏      | 319/1000 [01:04<02:10,  5.23it/s]Ref scores:  32%|███▏      | 320/1000 [01:04<02:09,  5.23it/s]Ref scores:  32%|███▏      | 322/1000 [01:05<02:05,  5.39it/s]Ref scores:  32%|███▏      | 323/1000 [01:05<02:05,  5.39it/s]Ref scores:  32%|███▏      | 324/1000 [01:05<02:04,  5.43it/s]Ref scores:  32%|███▎      | 325/1000 [01:05<02:04,  5.42it/s]Ref scores:  33%|███▎      | 326/1000 [01:05<02:11,  5.14it/s]Ref scores:  33%|███▎      | 327/1000 [01:06<02:09,  5.18it/s]Ref scores:  33%|███▎      | 328/1000 [01:06<02:08,  5.21it/s]Ref scores:  33%|███▎      | 329/1000 [01:06<02:07,  5.27it/s]Ref scores:  33%|███▎      | 330/1000 [01:06<02:05,  5.33it/s]Ref scores:  33%|███▎      | 331/1000 [01:06<02:03,  5.42it/s]Ref scores:  33%|███▎      | 332/1000 [01:07<02:03,  5.43it/s]Ref scores:  33%|███▎      | 333/1000 [01:07<02:01,  5.48it/s]Ref scores:  33%|███▎      | 334/1000 [01:07<02:02,  5.45it/s]Ref scores:  34%|███▎      | 335/1000 [01:07<02:02,  5.45it/s]Ref scores:  34%|███▎      | 336/1000 [01:07<01:47,  6.19it/s]Ref scores:  34%|███▎      | 337/1000 [01:07<01:51,  5.96it/s]Ref scores:  34%|███▍      | 338/1000 [01:08<01:54,  5.76it/s]Ref scores:  34%|███▍      | 339/1000 [01:08<01:57,  5.62it/s]Ref scores:  34%|███▍      | 340/1000 [01:08<01:59,  5.54it/s]Ref scores:  34%|███▍      | 341/1000 [01:08<01:58,  5.58it/s]Ref scores:  34%|███▍      | 342/1000 [01:08<01:59,  5.49it/s]Ref scores:  34%|███▍      | 343/1000 [01:08<02:00,  5.44it/s]Ref scores:  34%|███▍      | 344/1000 [01:09<01:54,  5.72it/s]Ref scores:  34%|███▍      | 345/1000 [01:09<01:54,  5.71it/s]Ref scores:  35%|███▍      | 346/1000 [01:09<01:56,  5.61it/s]Ref scores:  35%|███▍      | 347/1000 [01:09<02:03,  5.28it/s]Ref scores:  35%|███▍      | 348/1000 [01:09<02:04,  5.24it/s]Ref scores:  35%|███▍      | 349/1000 [01:10<01:57,  5.56it/s]Ref scores:  35%|███▌      | 350/1000 [01:10<01:58,  5.47it/s]Ref scores:  35%|███▌      | 351/1000 [01:10<01:58,  5.48it/s]Ref scores:  35%|███▌      | 352/1000 [01:10<01:58,  5.47it/s]Ref scores:  35%|███▌      | 353/1000 [01:10<02:07,  5.07it/s]Ref scores:  35%|███▌      | 354/1000 [01:11<02:05,  5.15it/s]Ref scores:  36%|███▌      | 355/1000 [01:11<02:01,  5.33it/s]Ref scores:  36%|███▌      | 356/1000 [01:11<01:49,  5.89it/s]Ref scores:  36%|███▌      | 358/1000 [01:11<01:37,  6.58it/s]Ref scores:  36%|███▌      | 359/1000 [01:11<01:41,  6.32it/s]Ref scores:  36%|███▌      | 360/1000 [01:11<01:45,  6.07it/s]Ref scores:  36%|███▌      | 361/1000 [01:12<01:54,  5.60it/s]Ref scores:  36%|███▌      | 362/1000 [01:12<01:56,  5.49it/s]Ref scores:  36%|███▋      | 363/1000 [01:12<01:51,  5.71it/s]Ref scores:  36%|███▋      | 364/1000 [01:12<01:58,  5.39it/s]Ref scores:  36%|███▋      | 365/1000 [01:12<02:03,  5.14it/s]Ref scores:  37%|███▋      | 366/1000 [01:13<02:01,  5.21it/s]Ref scores:  37%|███▋      | 367/1000 [01:13<02:05,  5.03it/s]Ref scores:  37%|███▋      | 368/1000 [01:13<02:02,  5.18it/s]Ref scores:  37%|███▋      | 369/1000 [01:13<01:54,  5.52it/s]Ref scores:  37%|███▋      | 370/1000 [01:13<01:55,  5.45it/s]Ref scores:  37%|███▋      | 371/1000 [01:13<01:41,  6.22it/s]Ref scores:  37%|███▋      | 372/1000 [01:14<01:31,  6.84it/s]Ref scores:  37%|███▋      | 373/1000 [01:14<01:40,  6.24it/s]Ref scores:  37%|███▋      | 374/1000 [01:14<01:48,  5.75it/s]Ref scores:  38%|███▊      | 375/1000 [01:14<01:50,  5.65it/s]Ref scores:  38%|███▊      | 376/1000 [01:14<02:00,  5.20it/s]Ref scores:  38%|███▊      | 377/1000 [01:15<01:58,  5.27it/s]Ref scores:  38%|███▊      | 378/1000 [01:15<01:57,  5.30it/s]Ref scores:  38%|███▊      | 379/1000 [01:15<02:01,  5.10it/s]Ref scores:  38%|███▊      | 380/1000 [01:15<01:59,  5.20it/s]Ref scores:  38%|███▊      | 381/1000 [01:15<01:56,  5.33it/s]Ref scores:  38%|███▊      | 382/1000 [01:15<01:41,  6.07it/s]Ref scores:  38%|███▊      | 383/1000 [01:16<01:59,  5.18it/s]Ref scores:  38%|███▊      | 384/1000 [01:16<01:57,  5.26it/s]Ref scores:  38%|███▊      | 385/1000 [01:16<01:41,  6.05it/s]Ref scores:  39%|███▊      | 386/1000 [01:16<01:44,  5.86it/s]Ref scores:  39%|███▊      | 387/1000 [01:16<01:46,  5.77it/s]Ref scores:  39%|███▉      | 388/1000 [01:17<01:46,  5.73it/s]Ref scores:  39%|███▉      | 389/1000 [01:17<01:51,  5.50it/s]Ref scores:  39%|███▉      | 390/1000 [01:17<01:51,  5.47it/s]Ref scores:  39%|███▉      | 391/1000 [01:17<01:38,  6.17it/s]Ref scores:  39%|███▉      | 392/1000 [01:17<01:42,  5.92it/s]Ref scores:  39%|███▉      | 393/1000 [01:17<01:47,  5.65it/s]Ref scores:  40%|███▉      | 395/1000 [01:18<01:44,  5.78it/s]Ref scores:  40%|███▉      | 397/1000 [01:18<01:38,  6.12it/s]Ref scores:  40%|███▉      | 398/1000 [01:18<01:41,  5.92it/s]Ref scores:  40%|███▉      | 399/1000 [01:18<01:42,  5.84it/s]Ref scores:  40%|████      | 400/1000 [01:19<01:40,  5.98it/s]Ref scores:  40%|████      | 401/1000 [01:19<01:42,  5.82it/s]Ref scores:  40%|████      | 402/1000 [01:19<01:46,  5.59it/s]Ref scores:  40%|████      | 403/1000 [01:19<01:47,  5.57it/s]Ref scores:  40%|████      | 404/1000 [01:19<01:52,  5.28it/s]Ref scores:  41%|████      | 406/1000 [01:20<01:40,  5.93it/s]Ref scores:  41%|████      | 407/1000 [01:20<01:45,  5.63it/s]Ref scores:  41%|████      | 408/1000 [01:20<01:41,  5.84it/s]Ref scores:  41%|████      | 409/1000 [01:20<01:31,  6.49it/s]Ref scores:  41%|████      | 410/1000 [01:20<01:23,  7.04it/s]Ref scores:  41%|████      | 411/1000 [01:20<01:31,  6.42it/s]Ref scores:  41%|████      | 412/1000 [01:21<01:35,  6.14it/s]Ref scores:  41%|████▏     | 413/1000 [01:21<01:26,  6.82it/s]Ref scores:  41%|████▏     | 414/1000 [01:21<01:33,  6.28it/s]Ref scores:  42%|████▏     | 415/1000 [01:21<01:37,  6.01it/s]Ref scores:  42%|████▏     | 416/1000 [01:21<01:42,  5.69it/s]Ref scores:  42%|████▏     | 417/1000 [01:21<01:45,  5.54it/s]Ref scores:  42%|████▏     | 418/1000 [01:22<01:33,  6.25it/s]Ref scores:  42%|████▏     | 419/1000 [01:22<01:35,  6.07it/s]Ref scores:  42%|████▏     | 420/1000 [01:22<01:39,  5.82it/s]Ref scores:  42%|████▏     | 421/1000 [01:22<01:42,  5.67it/s]Ref scores:  42%|████▏     | 422/1000 [01:22<01:48,  5.31it/s]Ref scores:  42%|████▏     | 423/1000 [01:23<01:47,  5.38it/s]Ref scores:  42%|████▏     | 424/1000 [01:23<01:35,  6.05it/s]Ref scores:  42%|████▎     | 425/1000 [01:23<01:47,  5.37it/s]Ref scores:  43%|████▎     | 426/1000 [01:23<01:41,  5.68it/s]Ref scores:  43%|████▎     | 427/1000 [01:23<01:43,  5.52it/s]Ref scores:  43%|████▎     | 428/1000 [01:23<01:51,  5.15it/s]Ref scores:  43%|████▎     | 429/1000 [01:24<01:47,  5.31it/s]Ref scores:  43%|████▎     | 430/1000 [01:24<01:59,  4.76it/s]Ref scores:  43%|████▎     | 431/1000 [01:24<01:55,  4.94it/s]Ref scores:  43%|████▎     | 432/1000 [01:24<01:50,  5.14it/s]Ref scores:  43%|████▎     | 433/1000 [01:24<01:48,  5.22it/s]Ref scores:  43%|████▎     | 434/1000 [01:25<01:45,  5.35it/s]Ref scores:  44%|████▎     | 435/1000 [01:25<01:43,  5.46it/s]Ref scores:  44%|████▎     | 436/1000 [01:25<01:49,  5.17it/s]Ref scores:  44%|████▎     | 437/1000 [01:25<01:46,  5.28it/s]Ref scores:  44%|████▍     | 438/1000 [01:25<01:50,  5.09it/s]Ref scores:  44%|████▍     | 439/1000 [01:26<01:46,  5.27it/s]Ref scores:  44%|████▍     | 440/1000 [01:26<01:45,  5.29it/s]Ref scores:  44%|████▍     | 441/1000 [01:26<01:45,  5.28it/s]Ref scores:  44%|████▍     | 442/1000 [01:26<01:46,  5.22it/s]Ref scores:  44%|████▍     | 443/1000 [01:26<01:44,  5.33it/s]Ref scores:  44%|████▍     | 444/1000 [01:27<01:47,  5.19it/s]Ref scores:  44%|████▍     | 445/1000 [01:27<01:45,  5.25it/s]Ref scores:  45%|████▍     | 446/1000 [01:27<01:41,  5.45it/s]Ref scores:  45%|████▍     | 447/1000 [01:27<01:42,  5.39it/s]Ref scores:  45%|████▍     | 448/1000 [01:27<01:30,  6.09it/s]Ref scores:  45%|████▍     | 449/1000 [01:27<01:45,  5.20it/s]Ref scores:  45%|████▌     | 450/1000 [01:28<01:40,  5.48it/s]Ref scores:  45%|████▌     | 451/1000 [01:28<01:42,  5.34it/s]Ref scores:  45%|████▌     | 452/1000 [01:28<01:43,  5.29it/s]Ref scores:  45%|████▌     | 454/1000 [01:28<01:33,  5.84it/s]Ref scores:  46%|████▌     | 455/1000 [01:28<01:35,  5.68it/s]Ref scores:  46%|████▌     | 456/1000 [01:29<01:39,  5.49it/s]Ref scores:  46%|████▌     | 457/1000 [01:29<01:44,  5.22it/s]Ref scores:  46%|████▌     | 458/1000 [01:29<01:42,  5.29it/s]Ref scores:  46%|████▌     | 459/1000 [01:29<01:37,  5.55it/s]Ref scores:  46%|████▌     | 460/1000 [01:29<01:38,  5.47it/s]Ref scores:  46%|████▌     | 461/1000 [01:30<01:40,  5.39it/s]Ref scores:  46%|████▌     | 462/1000 [01:30<01:40,  5.36it/s]Ref scores:  46%|████▋     | 463/1000 [01:30<01:43,  5.17it/s]Ref scores:  46%|████▋     | 464/1000 [01:30<01:43,  5.18it/s]Ref scores:  46%|████▋     | 465/1000 [01:30<01:41,  5.26it/s]Ref scores:  47%|████▋     | 466/1000 [01:31<01:39,  5.34it/s]Ref scores:  47%|████▋     | 467/1000 [01:31<01:43,  5.13it/s]Ref scores:  47%|████▋     | 468/1000 [01:31<01:43,  5.13it/s]Ref scores:  47%|████▋     | 469/1000 [01:31<01:42,  5.18it/s]Ref scores:  47%|████▋     | 470/1000 [01:31<01:44,  5.05it/s]Ref scores:  47%|████▋     | 471/1000 [01:32<01:42,  5.15it/s]Ref scores:  47%|████▋     | 472/1000 [01:32<01:42,  5.15it/s]Ref scores:  47%|████▋     | 473/1000 [01:32<01:39,  5.29it/s]Ref scores:  47%|████▋     | 474/1000 [01:32<01:39,  5.27it/s]Ref scores:  48%|████▊     | 475/1000 [01:32<01:34,  5.54it/s]Ref scores:  48%|████▊     | 476/1000 [01:32<01:35,  5.46it/s]Ref scores:  48%|████▊     | 477/1000 [01:33<01:36,  5.44it/s]Ref scores:  48%|████▊     | 478/1000 [01:33<01:25,  6.12it/s]Ref scores:  48%|████▊     | 479/1000 [01:33<01:28,  5.88it/s]Ref scores:  48%|████▊     | 480/1000 [01:33<01:30,  5.75it/s]Ref scores:  48%|████▊     | 481/1000 [01:33<01:31,  5.70it/s]Ref scores:  48%|████▊     | 482/1000 [01:34<01:32,  5.62it/s]Ref scores:  48%|████▊     | 483/1000 [01:34<01:33,  5.50it/s]Ref scores:  48%|████▊     | 484/1000 [01:34<01:34,  5.48it/s]Ref scores:  48%|████▊     | 485/1000 [01:34<01:34,  5.46it/s]Ref scores:  49%|████▊     | 486/1000 [01:34<01:35,  5.37it/s]Ref scores:  49%|████▊     | 487/1000 [01:34<01:35,  5.36it/s]Ref scores:  49%|████▉     | 488/1000 [01:35<01:36,  5.33it/s]Ref scores:  49%|████▉     | 489/1000 [01:35<01:24,  6.04it/s]Ref scores:  49%|████▉     | 490/1000 [01:35<01:31,  5.57it/s]Ref scores:  49%|████▉     | 491/1000 [01:35<01:31,  5.54it/s]Ref scores:  49%|████▉     | 492/1000 [01:35<01:32,  5.48it/s]Ref scores:  49%|████▉     | 493/1000 [01:36<01:33,  5.42it/s]Ref scores:  49%|████▉     | 494/1000 [01:36<01:33,  5.38it/s]Ref scores:  50%|████▉     | 495/1000 [01:36<01:33,  5.42it/s]Ref scores:  50%|████▉     | 496/1000 [01:36<01:32,  5.47it/s]Ref scores:  50%|████▉     | 497/1000 [01:36<01:32,  5.43it/s]Ref scores:  50%|████▉     | 498/1000 [01:36<01:32,  5.43it/s]Ref scores:  50%|████▉     | 499/1000 [01:37<01:32,  5.43it/s]Ref scores:  50%|█████     | 500/1000 [01:37<01:32,  5.38it/s]Ref scores:  50%|█████     | 501/1000 [01:37<01:32,  5.41it/s]Ref scores:  50%|█████     | 502/1000 [01:37<01:32,  5.40it/s]Ref scores:  50%|█████     | 503/1000 [01:37<01:27,  5.66it/s]Ref scores:  50%|█████     | 504/1000 [01:38<01:28,  5.58it/s]Ref scores:  51%|█████     | 506/1000 [01:38<01:19,  6.21it/s]Ref scores:  51%|█████     | 507/1000 [01:38<01:18,  6.28it/s]Ref scores:  51%|█████     | 508/1000 [01:38<01:17,  6.33it/s]Ref scores:  51%|█████     | 509/1000 [01:38<01:21,  5.99it/s]Ref scores:  51%|█████     | 510/1000 [01:38<01:24,  5.77it/s]Ref scores:  51%|█████     | 511/1000 [01:39<01:25,  5.70it/s]Ref scores:  51%|█████     | 512/1000 [01:39<01:32,  5.27it/s]Ref scores:  51%|█████▏    | 513/1000 [01:39<01:35,  5.10it/s]Ref scores:  51%|█████▏    | 514/1000 [01:39<01:31,  5.34it/s]Ref scores:  52%|█████▏    | 515/1000 [01:39<01:31,  5.33it/s]Ref scores:  52%|█████▏    | 516/1000 [01:40<01:34,  5.11it/s]Ref scores:  52%|█████▏    | 517/1000 [01:40<01:33,  5.15it/s]Ref scores:  52%|█████▏    | 518/1000 [01:40<01:31,  5.25it/s]Ref scores:  52%|█████▏    | 519/1000 [01:40<01:30,  5.29it/s]Ref scores:  52%|█████▏    | 520/1000 [01:40<01:30,  5.31it/s]Ref scores:  52%|█████▏    | 521/1000 [01:41<01:28,  5.43it/s]Ref scores:  52%|█████▏    | 522/1000 [01:41<01:27,  5.44it/s]Ref scores:  52%|█████▏    | 523/1000 [01:41<01:28,  5.38it/s]Ref scores:  52%|█████▏    | 524/1000 [01:41<01:27,  5.47it/s]Ref scores:  52%|█████▎    | 525/1000 [01:41<01:22,  5.76it/s]Ref scores:  53%|█████▎    | 526/1000 [01:41<01:19,  5.99it/s]Ref scores:  53%|█████▎    | 527/1000 [01:42<01:22,  5.75it/s]Ref scores:  53%|█████▎    | 528/1000 [01:42<01:22,  5.72it/s]Ref scores:  53%|█████▎    | 529/1000 [01:42<01:23,  5.64it/s]Ref scores:  53%|█████▎    | 530/1000 [01:42<01:25,  5.52it/s]Ref scores:  53%|█████▎    | 531/1000 [01:42<01:25,  5.49it/s]Ref scores:  53%|█████▎    | 532/1000 [01:42<01:15,  6.21it/s]Ref scores:  53%|█████▎    | 533/1000 [01:43<01:17,  6.04it/s]Ref scores:  53%|█████▎    | 534/1000 [01:43<01:24,  5.51it/s]Ref scores:  54%|█████▎    | 535/1000 [01:43<01:29,  5.19it/s]Ref scores:  54%|█████▎    | 536/1000 [01:43<01:27,  5.30it/s]Ref scores:  54%|█████▎    | 537/1000 [01:43<01:27,  5.27it/s]Ref scores:  54%|█████▍    | 538/1000 [01:44<01:31,  5.03it/s]Ref scores:  54%|█████▍    | 539/1000 [01:44<01:30,  5.10it/s]Ref scores:  54%|█████▍    | 541/1000 [01:44<01:17,  5.94it/s]Ref scores:  54%|█████▍    | 542/1000 [01:44<01:15,  6.08it/s]Ref scores:  54%|█████▍    | 543/1000 [01:45<01:18,  5.84it/s]Ref scores:  54%|█████▍    | 544/1000 [01:45<01:19,  5.76it/s]Ref scores:  55%|█████▍    | 545/1000 [01:45<01:20,  5.67it/s]Ref scores:  55%|█████▍    | 546/1000 [01:45<01:16,  5.93it/s]Ref scores:  55%|█████▍    | 547/1000 [01:45<01:19,  5.71it/s]Ref scores:  55%|█████▍    | 548/1000 [01:45<01:20,  5.60it/s]Ref scores:  55%|█████▌    | 550/1000 [01:46<01:11,  6.30it/s]Ref scores:  55%|█████▌    | 551/1000 [01:46<01:05,  6.81it/s]Ref scores:  55%|█████▌    | 552/1000 [01:46<01:13,  6.10it/s]Ref scores:  55%|█████▌    | 553/1000 [01:46<01:15,  5.95it/s]Ref scores:  55%|█████▌    | 554/1000 [01:46<01:21,  5.48it/s]Ref scores:  56%|█████▌    | 555/1000 [01:47<01:20,  5.53it/s]Ref scores:  56%|█████▌    | 556/1000 [01:47<01:19,  5.55it/s]Ref scores:  56%|█████▌    | 557/1000 [01:47<01:20,  5.51it/s]Ref scores:  56%|█████▌    | 559/1000 [01:47<01:10,  6.28it/s]Ref scores:  56%|█████▌    | 560/1000 [01:47<01:12,  6.03it/s]Ref scores:  56%|█████▌    | 561/1000 [01:48<01:11,  6.16it/s]Ref scores:  56%|█████▌    | 562/1000 [01:48<01:16,  5.75it/s]Ref scores:  56%|█████▋    | 563/1000 [01:48<01:16,  5.73it/s]Ref scores:  56%|█████▋    | 564/1000 [01:48<01:16,  5.73it/s]Ref scores:  56%|█████▋    | 565/1000 [01:48<01:16,  5.66it/s]Ref scores:  57%|█████▋    | 566/1000 [01:48<01:18,  5.55it/s]Ref scores:  57%|█████▋    | 567/1000 [01:49<01:14,  5.82it/s]Ref scores:  57%|█████▋    | 568/1000 [01:49<01:24,  5.09it/s]Ref scores:  57%|█████▋    | 569/1000 [01:49<01:28,  4.90it/s]Ref scores:  57%|█████▋    | 570/1000 [01:49<01:25,  5.01it/s]Ref scores:  57%|█████▋    | 571/1000 [01:49<01:24,  5.08it/s]Ref scores:  57%|█████▋    | 572/1000 [01:50<01:23,  5.11it/s]Ref scores:  57%|█████▋    | 573/1000 [01:50<01:12,  5.88it/s]Ref scores:  57%|█████▋    | 574/1000 [01:50<01:13,  5.83it/s]Ref scores:  58%|█████▊    | 576/1000 [01:50<00:57,  7.38it/s]Ref scores:  58%|█████▊    | 577/1000 [01:50<01:02,  6.74it/s]Ref scores:  58%|█████▊    | 578/1000 [01:50<01:05,  6.44it/s]Ref scores:  58%|█████▊    | 579/1000 [01:51<00:59,  7.04it/s]Ref scores:  58%|█████▊    | 580/1000 [01:51<01:04,  6.47it/s]Ref scores:  58%|█████▊    | 581/1000 [01:51<01:08,  6.09it/s]Ref scores:  58%|█████▊    | 582/1000 [01:51<01:10,  5.96it/s]Ref scores:  58%|█████▊    | 583/1000 [01:51<01:16,  5.46it/s]Ref scores:  58%|█████▊    | 584/1000 [01:52<01:25,  4.85it/s]Ref scores:  58%|█████▊    | 585/1000 [01:52<01:37,  4.27it/s]Ref scores:  59%|█████▊    | 586/1000 [01:52<01:30,  4.55it/s]Ref scores:  59%|█████▊    | 587/1000 [01:52<01:27,  4.71it/s]Ref scores:  59%|█████▉    | 588/1000 [01:53<01:26,  4.75it/s]Ref scores:  59%|█████▉    | 589/1000 [01:53<01:26,  4.77it/s]Ref scores:  59%|█████▉    | 590/1000 [01:53<01:19,  5.18it/s]Ref scores:  59%|█████▉    | 591/1000 [01:53<01:17,  5.24it/s]Ref scores:  59%|█████▉    | 592/1000 [01:53<01:15,  5.37it/s]Ref scores:  59%|█████▉    | 593/1000 [01:53<01:18,  5.18it/s]Ref scores:  59%|█████▉    | 594/1000 [01:54<01:18,  5.19it/s]Ref scores:  60%|█████▉    | 595/1000 [01:54<01:15,  5.33it/s]Ref scores:  60%|█████▉    | 596/1000 [01:54<01:14,  5.42it/s]Ref scores:  60%|█████▉    | 597/1000 [01:54<01:14,  5.42it/s]Ref scores:  60%|█████▉    | 598/1000 [01:54<01:13,  5.44it/s]Ref scores:  60%|█████▉    | 599/1000 [01:55<01:10,  5.73it/s]Ref scores:  60%|██████    | 600/1000 [01:55<01:02,  6.42it/s]Ref scores:  60%|██████    | 601/1000 [01:55<01:05,  6.08it/s]Ref scores:  60%|██████    | 602/1000 [01:55<01:07,  5.87it/s]Ref scores:  60%|██████    | 603/1000 [01:55<01:09,  5.68it/s]Ref scores:  60%|██████    | 604/1000 [01:55<01:20,  4.94it/s]Ref scores:  60%|██████    | 605/1000 [01:56<01:16,  5.14it/s]Ref scores:  61%|██████    | 607/1000 [01:56<01:02,  6.24it/s]Ref scores:  61%|██████    | 608/1000 [01:56<01:05,  6.03it/s]Ref scores:  61%|██████    | 609/1000 [01:56<00:59,  6.57it/s]Ref scores:  61%|██████    | 610/1000 [01:56<00:54,  7.12it/s]Ref scores:  61%|██████    | 611/1000 [01:56<01:00,  6.45it/s]Ref scores:  61%|██████    | 612/1000 [01:57<01:00,  6.41it/s]Ref scores:  61%|██████▏   | 613/1000 [01:57<01:04,  6.05it/s]Ref scores:  61%|██████▏   | 614/1000 [01:57<01:06,  5.83it/s]Ref scores:  62%|██████▏   | 615/1000 [01:57<01:06,  5.76it/s]Ref scores:  62%|██████▏   | 616/1000 [01:57<01:07,  5.67it/s]Ref scores:  62%|██████▏   | 617/1000 [01:58<01:07,  5.66it/s]Ref scores:  62%|██████▏   | 618/1000 [01:58<01:07,  5.69it/s]Ref scores:  62%|██████▏   | 619/1000 [01:58<01:05,  5.80it/s]Ref scores:  62%|██████▏   | 620/1000 [01:58<01:09,  5.47it/s]Ref scores:  62%|██████▏   | 621/1000 [01:58<01:01,  6.21it/s]Ref scores:  62%|██████▏   | 622/1000 [01:58<01:03,  5.99it/s]Ref scores:  62%|██████▏   | 623/1000 [01:59<01:03,  5.90it/s]Ref scores:  62%|██████▏   | 624/1000 [01:59<01:04,  5.84it/s]Ref scores:  62%|██████▎   | 625/1000 [01:59<01:05,  5.70it/s]Ref scores:  63%|██████▎   | 626/1000 [01:59<01:07,  5.57it/s]Ref scores:  63%|██████▎   | 627/1000 [01:59<01:07,  5.54it/s]Ref scores:  63%|██████▎   | 628/1000 [01:59<01:07,  5.54it/s]Ref scores:  63%|██████▎   | 629/1000 [02:00<01:12,  5.14it/s]Ref scores:  63%|██████▎   | 630/1000 [02:00<01:02,  5.92it/s]Ref scores:  63%|██████▎   | 631/1000 [02:00<01:04,  5.69it/s]Ref scores:  63%|██████▎   | 632/1000 [02:00<01:07,  5.44it/s]Ref scores:  63%|██████▎   | 633/1000 [02:00<01:12,  5.06it/s]Ref scores:  63%|██████▎   | 634/1000 [02:01<01:11,  5.09it/s]Ref scores:  64%|██████▎   | 635/1000 [02:01<01:13,  5.00it/s]Ref scores:  64%|██████▎   | 636/1000 [02:01<01:11,  5.08it/s]Ref scores:  64%|██████▎   | 637/1000 [02:01<01:09,  5.21it/s]Ref scores:  64%|██████▍   | 638/1000 [02:01<01:08,  5.29it/s]Ref scores:  64%|██████▍   | 639/1000 [02:02<01:01,  5.85it/s]Ref scores:  64%|██████▍   | 640/1000 [02:02<01:05,  5.50it/s]Ref scores:  64%|██████▍   | 641/1000 [02:02<00:58,  6.14it/s]Ref scores:  64%|██████▍   | 642/1000 [02:02<00:53,  6.67it/s]Ref scores:  64%|██████▍   | 643/1000 [02:02<00:50,  7.04it/s]Ref scores:  64%|██████▍   | 644/1000 [02:02<00:59,  6.02it/s]Ref scores:  64%|██████▍   | 645/1000 [02:02<01:00,  5.88it/s]Ref scores:  65%|██████▍   | 646/1000 [02:03<01:09,  5.09it/s]Ref scores:  65%|██████▍   | 647/1000 [02:03<01:07,  5.22it/s]Ref scores:  65%|██████▍   | 648/1000 [02:03<01:05,  5.36it/s]Ref scores:  65%|██████▍   | 649/1000 [02:03<01:05,  5.36it/s]Ref scores:  65%|██████▌   | 650/1000 [02:03<01:04,  5.42it/s]Ref scores:  65%|██████▌   | 651/1000 [02:04<01:04,  5.43it/s]Ref scores:  65%|██████▌   | 652/1000 [02:04<01:04,  5.41it/s]Ref scores:  65%|██████▌   | 653/1000 [02:04<01:04,  5.39it/s]Ref scores:  65%|██████▌   | 654/1000 [02:04<01:12,  4.76it/s]Ref scores:  66%|██████▌   | 655/1000 [02:04<01:10,  4.90it/s]Ref scores:  66%|██████▌   | 656/1000 [02:05<01:01,  5.63it/s]Ref scores:  66%|██████▌   | 657/1000 [02:05<01:08,  5.00it/s]Ref scores:  66%|██████▌   | 658/1000 [02:05<01:08,  5.02it/s]Ref scores:  66%|██████▌   | 659/1000 [02:05<01:10,  4.85it/s]Ref scores:  66%|██████▌   | 660/1000 [02:05<01:11,  4.74it/s]Ref scores:  66%|██████▌   | 661/1000 [02:06<01:15,  4.47it/s]Ref scores:  66%|██████▌   | 662/1000 [02:06<01:11,  4.75it/s]Ref scores:  66%|██████▋   | 663/1000 [02:06<01:07,  4.96it/s]Ref scores:  66%|██████▋   | 664/1000 [02:06<01:05,  5.10it/s]Ref scores:  66%|██████▋   | 665/1000 [02:06<01:03,  5.25it/s]Ref scores:  67%|██████▋   | 666/1000 [02:07<01:03,  5.30it/s]Ref scores:  67%|██████▋   | 667/1000 [02:07<01:01,  5.37it/s]Ref scores:  67%|██████▋   | 668/1000 [02:07<01:02,  5.34it/s]Ref scores:  67%|██████▋   | 669/1000 [02:07<00:54,  6.05it/s]Ref scores:  67%|██████▋   | 671/1000 [02:07<00:47,  6.95it/s]Ref scores:  67%|██████▋   | 672/1000 [02:08<00:50,  6.45it/s]Ref scores:  67%|██████▋   | 673/1000 [02:08<00:53,  6.10it/s]Ref scores:  67%|██████▋   | 674/1000 [02:08<00:52,  6.20it/s]Ref scores:  68%|██████▊   | 675/1000 [02:08<00:48,  6.69it/s]Ref scores:  68%|██████▊   | 676/1000 [02:08<00:52,  6.17it/s]Ref scores:  68%|██████▊   | 677/1000 [02:08<00:54,  5.91it/s]Ref scores:  68%|██████▊   | 678/1000 [02:09<00:49,  6.49it/s]Ref scores:  68%|██████▊   | 679/1000 [02:09<00:52,  6.06it/s]Ref scores:  68%|██████▊   | 680/1000 [02:09<00:55,  5.73it/s]Ref scores:  68%|██████▊   | 681/1000 [02:09<00:59,  5.34it/s]Ref scores:  68%|██████▊   | 682/1000 [02:09<01:00,  5.27it/s]Ref scores:  68%|██████▊   | 683/1000 [02:09<01:00,  5.28it/s]Ref scores:  68%|██████▊   | 684/1000 [02:10<00:59,  5.31it/s]Ref scores:  68%|██████▊   | 685/1000 [02:10<01:01,  5.15it/s]Ref scores:  69%|██████▊   | 686/1000 [02:10<00:59,  5.25it/s]Ref scores:  69%|██████▊   | 687/1000 [02:10<00:59,  5.28it/s]Ref scores:  69%|██████▉   | 688/1000 [02:10<00:57,  5.39it/s]Ref scores:  69%|██████▉   | 689/1000 [02:11<00:59,  5.21it/s]Ref scores:  69%|██████▉   | 690/1000 [02:11<00:57,  5.36it/s]Ref scores:  69%|██████▉   | 691/1000 [02:11<00:54,  5.71it/s]Ref scores:  69%|██████▉   | 692/1000 [02:11<00:53,  5.75it/s]Ref scores:  69%|██████▉   | 693/1000 [02:11<00:53,  5.72it/s]Ref scores:  69%|██████▉   | 694/1000 [02:11<00:53,  5.74it/s]Ref scores:  70%|██████▉   | 695/1000 [02:12<00:54,  5.62it/s]Ref scores:  70%|██████▉   | 696/1000 [02:12<00:54,  5.59it/s]Ref scores:  70%|██████▉   | 697/1000 [02:12<00:54,  5.57it/s]Ref scores:  70%|██████▉   | 698/1000 [02:12<00:53,  5.61it/s]Ref scores:  70%|██████▉   | 699/1000 [02:12<00:54,  5.47it/s]Ref scores:  70%|███████   | 700/1000 [02:13<00:54,  5.49it/s]Ref scores:  70%|███████   | 701/1000 [02:13<00:54,  5.50it/s]Ref scores:  70%|███████   | 702/1000 [02:13<00:54,  5.45it/s]Ref scores:  70%|███████   | 704/1000 [02:13<00:49,  5.95it/s]Ref scores:  70%|███████   | 705/1000 [02:13<00:50,  5.83it/s]Ref scores:  71%|███████   | 706/1000 [02:14<00:51,  5.71it/s]Ref scores:  71%|███████   | 707/1000 [02:14<00:49,  5.90it/s]Ref scores:  71%|███████   | 708/1000 [02:14<00:52,  5.53it/s]Ref scores:  71%|███████   | 709/1000 [02:14<00:46,  6.22it/s]Ref scores:  71%|███████   | 710/1000 [02:14<00:51,  5.59it/s]Ref scores:  71%|███████   | 711/1000 [02:15<00:55,  5.25it/s]Ref scores:  71%|███████   | 712/1000 [02:15<00:57,  4.99it/s]Ref scores:  71%|███████▏  | 713/1000 [02:15<00:55,  5.14it/s]Ref scores:  71%|███████▏  | 714/1000 [02:15<00:54,  5.25it/s]Ref scores:  72%|███████▏  | 715/1000 [02:15<00:56,  5.07it/s]Ref scores:  72%|███████▏  | 716/1000 [02:16<00:56,  5.00it/s]Ref scores:  72%|███████▏  | 717/1000 [02:16<00:55,  5.09it/s]Ref scores:  72%|███████▏  | 718/1000 [02:16<00:54,  5.20it/s]Ref scores:  72%|███████▏  | 719/1000 [02:16<00:56,  4.93it/s]Ref scores:  72%|███████▏  | 721/1000 [02:16<00:50,  5.57it/s]Ref scores:  72%|███████▏  | 722/1000 [02:17<00:50,  5.55it/s]Ref scores:  72%|███████▏  | 723/1000 [02:17<00:49,  5.59it/s]Ref scores:  72%|███████▏  | 724/1000 [02:17<00:53,  5.20it/s]Ref scores:  72%|███████▎  | 725/1000 [02:17<00:52,  5.28it/s]Ref scores:  73%|███████▎  | 726/1000 [02:17<00:52,  5.18it/s]Ref scores:  73%|███████▎  | 728/1000 [02:18<00:44,  6.11it/s]Ref scores:  73%|███████▎  | 729/1000 [02:18<00:45,  5.97it/s]Ref scores:  73%|███████▎  | 730/1000 [02:18<00:45,  5.88it/s]Ref scores:  73%|███████▎  | 731/1000 [02:18<00:47,  5.72it/s]Ref scores:  73%|███████▎  | 732/1000 [02:18<00:47,  5.69it/s]Ref scores:  73%|███████▎  | 733/1000 [02:19<00:46,  5.70it/s]Ref scores:  73%|███████▎  | 734/1000 [02:19<00:46,  5.71it/s]Ref scores:  74%|███████▎  | 735/1000 [02:19<00:46,  5.66it/s]Ref scores:  74%|███████▎  | 736/1000 [02:19<00:41,  6.34it/s]Ref scores:  74%|███████▎  | 737/1000 [02:19<00:42,  6.16it/s]Ref scores:  74%|███████▍  | 738/1000 [02:19<00:38,  6.78it/s]Ref scores:  74%|███████▍  | 739/1000 [02:20<00:41,  6.23it/s]Ref scores:  74%|███████▍  | 740/1000 [02:20<00:43,  6.02it/s]Ref scores:  74%|███████▍  | 741/1000 [02:20<00:44,  5.88it/s]Ref scores:  74%|███████▍  | 742/1000 [02:20<00:39,  6.47it/s]Ref scores:  74%|███████▍  | 743/1000 [02:20<00:41,  6.13it/s]Ref scores:  74%|███████▍  | 744/1000 [02:20<00:43,  5.86it/s]Ref scores:  75%|███████▍  | 746/1000 [02:21<00:35,  7.22it/s]Ref scores:  75%|███████▍  | 747/1000 [02:21<00:37,  6.79it/s]Ref scores:  75%|███████▍  | 748/1000 [02:21<00:39,  6.40it/s]Ref scores:  75%|███████▍  | 749/1000 [02:21<00:40,  6.16it/s]Ref scores:  75%|███████▌  | 750/1000 [02:21<00:47,  5.31it/s]Ref scores:  75%|███████▌  | 751/1000 [02:21<00:41,  5.94it/s]Ref scores:  75%|███████▌  | 752/1000 [02:22<00:42,  5.79it/s]Ref scores:  75%|███████▌  | 753/1000 [02:22<00:43,  5.72it/s]Ref scores:  75%|███████▌  | 754/1000 [02:22<00:45,  5.45it/s]Ref scores:  76%|███████▌  | 755/1000 [02:22<00:45,  5.39it/s]Ref scores:  76%|███████▌  | 756/1000 [02:22<00:47,  5.09it/s]Ref scores:  76%|███████▌  | 757/1000 [02:23<00:47,  5.16it/s]Ref scores:  76%|███████▌  | 758/1000 [02:23<00:44,  5.48it/s]Ref scores:  76%|███████▌  | 759/1000 [02:23<00:43,  5.48it/s]Ref scores:  76%|███████▌  | 760/1000 [02:23<00:43,  5.54it/s]Ref scores:  76%|███████▌  | 761/1000 [02:23<00:43,  5.51it/s]Ref scores:  76%|███████▌  | 762/1000 [02:24<00:43,  5.42it/s]Ref scores:  76%|███████▋  | 763/1000 [02:24<00:44,  5.36it/s]Ref scores:  76%|███████▋  | 764/1000 [02:24<00:44,  5.32it/s]Ref scores:  76%|███████▋  | 765/1000 [02:24<00:44,  5.28it/s]Ref scores:  77%|███████▋  | 766/1000 [02:24<00:46,  5.05it/s]Ref scores:  77%|███████▋  | 767/1000 [02:25<00:46,  4.96it/s]Ref scores:  77%|███████▋  | 768/1000 [02:25<00:46,  5.02it/s]Ref scores:  77%|███████▋  | 769/1000 [02:25<00:40,  5.67it/s]Ref scores:  77%|███████▋  | 770/1000 [02:25<00:40,  5.66it/s]Ref scores:  77%|███████▋  | 771/1000 [02:25<00:39,  5.85it/s]Ref scores:  77%|███████▋  | 772/1000 [02:25<00:39,  5.70it/s]Ref scores:  77%|███████▋  | 773/1000 [02:26<00:41,  5.52it/s]Ref scores:  77%|███████▋  | 774/1000 [02:26<00:42,  5.28it/s]Ref scores:  78%|███████▊  | 775/1000 [02:26<00:42,  5.32it/s]Ref scores:  78%|███████▊  | 776/1000 [02:26<00:42,  5.27it/s]Ref scores:  78%|███████▊  | 777/1000 [02:26<00:39,  5.58it/s]Ref scores:  78%|███████▊  | 778/1000 [02:26<00:40,  5.48it/s]Ref scores:  78%|███████▊  | 779/1000 [02:27<00:40,  5.45it/s]Ref scores:  78%|███████▊  | 780/1000 [02:27<00:41,  5.29it/s]Ref scores:  78%|███████▊  | 781/1000 [02:27<00:52,  4.14it/s]Ref scores:  78%|███████▊  | 782/1000 [02:27<00:52,  4.16it/s]Ref scores:  78%|███████▊  | 783/1000 [02:28<00:48,  4.44it/s]Ref scores:  78%|███████▊  | 784/1000 [02:28<00:47,  4.59it/s]Ref scores:  78%|███████▊  | 785/1000 [02:28<00:46,  4.64it/s]Ref scores:  79%|███████▊  | 786/1000 [02:28<00:44,  4.85it/s]Ref scores:  79%|███████▊  | 787/1000 [02:28<00:41,  5.11it/s]Ref scores:  79%|███████▉  | 788/1000 [02:29<00:41,  5.13it/s]Ref scores:  79%|███████▉  | 789/1000 [02:29<00:40,  5.23it/s]Ref scores:  79%|███████▉  | 790/1000 [02:29<00:40,  5.23it/s]Ref scores:  79%|███████▉  | 791/1000 [02:29<00:34,  6.01it/s]Ref scores:  79%|███████▉  | 792/1000 [02:29<00:36,  5.74it/s]Ref scores:  79%|███████▉  | 793/1000 [02:30<00:41,  5.04it/s]Ref scores:  79%|███████▉  | 794/1000 [02:30<00:39,  5.22it/s]Ref scores:  80%|███████▉  | 795/1000 [02:30<00:37,  5.52it/s]Ref scores:  80%|███████▉  | 796/1000 [02:30<00:37,  5.47it/s]Ref scores:  80%|███████▉  | 797/1000 [02:30<00:38,  5.31it/s]Ref scores:  80%|███████▉  | 798/1000 [02:30<00:37,  5.35it/s]Ref scores:  80%|███████▉  | 799/1000 [02:31<00:37,  5.30it/s]Ref scores:  80%|████████  | 800/1000 [02:31<00:37,  5.31it/s]Ref scores:  80%|████████  | 801/1000 [02:31<00:37,  5.38it/s]Ref scores:  80%|████████  | 802/1000 [02:31<00:32,  6.06it/s]Ref scores:  80%|████████  | 803/1000 [02:31<00:33,  5.94it/s]Ref scores:  80%|████████  | 804/1000 [02:32<00:33,  5.81it/s]Ref scores:  80%|████████  | 805/1000 [02:32<00:34,  5.59it/s]Ref scores:  81%|████████  | 806/1000 [02:32<00:33,  5.79it/s]Ref scores:  81%|████████  | 807/1000 [02:32<00:38,  5.05it/s]Ref scores:  81%|████████  | 808/1000 [02:32<00:37,  5.12it/s]Ref scores:  81%|████████  | 809/1000 [02:32<00:36,  5.19it/s]Ref scores:  81%|████████  | 810/1000 [02:33<00:36,  5.24it/s]Ref scores:  81%|████████  | 811/1000 [02:33<00:35,  5.26it/s]Ref scores:  81%|████████  | 812/1000 [02:33<00:37,  5.03it/s]Ref scores:  81%|████████▏ | 813/1000 [02:33<00:35,  5.21it/s]Ref scores:  81%|████████▏ | 814/1000 [02:33<00:35,  5.27it/s]Ref scores:  82%|████████▏ | 815/1000 [02:34<00:30,  6.03it/s]Ref scores:  82%|████████▏ | 817/1000 [02:34<00:28,  6.53it/s]Ref scores:  82%|████████▏ | 818/1000 [02:34<00:31,  5.85it/s]Ref scores:  82%|████████▏ | 819/1000 [02:34<00:31,  5.74it/s]Ref scores:  82%|████████▏ | 820/1000 [02:34<00:31,  5.71it/s]Ref scores:  82%|████████▏ | 821/1000 [02:35<00:32,  5.48it/s]Ref scores:  82%|████████▏ | 822/1000 [02:35<00:33,  5.37it/s]Ref scores:  82%|████████▏ | 823/1000 [02:35<00:31,  5.64it/s]Ref scores:  82%|████████▏ | 824/1000 [02:35<00:31,  5.62it/s]Ref scores:  82%|████████▎ | 825/1000 [02:35<00:31,  5.63it/s]Ref scores:  83%|████████▎ | 826/1000 [02:36<00:31,  5.56it/s]Ref scores:  83%|████████▎ | 827/1000 [02:36<00:27,  6.30it/s]Ref scores:  83%|████████▎ | 828/1000 [02:36<00:30,  5.69it/s]Ref scores:  83%|████████▎ | 829/1000 [02:36<00:27,  6.33it/s]Ref scores:  83%|████████▎ | 830/1000 [02:36<00:28,  5.97it/s]Ref scores:  83%|████████▎ | 831/1000 [02:36<00:29,  5.76it/s]Ref scores:  83%|████████▎ | 832/1000 [02:37<00:29,  5.75it/s]Ref scores:  83%|████████▎ | 833/1000 [02:37<00:29,  5.75it/s]Ref scores:  83%|████████▎ | 834/1000 [02:37<00:29,  5.70it/s]Ref scores:  84%|████████▎ | 835/1000 [02:37<00:29,  5.64it/s]Ref scores:  84%|████████▎ | 836/1000 [02:37<00:30,  5.45it/s]Ref scores:  84%|████████▎ | 837/1000 [02:37<00:30,  5.43it/s]Ref scores:  84%|████████▍ | 838/1000 [02:38<00:28,  5.72it/s]Ref scores:  84%|████████▍ | 839/1000 [02:38<00:24,  6.44it/s]Ref scores:  84%|████████▍ | 840/1000 [02:38<00:26,  6.02it/s]Ref scores:  84%|████████▍ | 841/1000 [02:38<00:27,  5.83it/s]Ref scores:  84%|████████▍ | 842/1000 [02:38<00:28,  5.47it/s]Ref scores:  84%|████████▍ | 844/1000 [02:39<00:24,  6.35it/s]Ref scores:  84%|████████▍ | 845/1000 [02:39<00:25,  6.10it/s]Ref scores:  85%|████████▍ | 846/1000 [02:39<00:25,  5.95it/s]Ref scores:  85%|████████▍ | 847/1000 [02:39<00:26,  5.78it/s]Ref scores:  85%|████████▍ | 848/1000 [02:39<00:25,  5.98it/s]Ref scores:  85%|████████▍ | 849/1000 [02:39<00:25,  5.88it/s]Ref scores:  85%|████████▌ | 850/1000 [02:40<00:27,  5.38it/s]Ref scores:  85%|████████▌ | 851/1000 [02:40<00:27,  5.35it/s]Ref scores:  85%|████████▌ | 853/1000 [02:40<00:23,  6.14it/s]Ref scores:  85%|████████▌ | 854/1000 [02:40<00:25,  5.77it/s]Ref scores:  86%|████████▌ | 855/1000 [02:41<00:26,  5.43it/s]Ref scores:  86%|████████▌ | 856/1000 [02:41<00:29,  4.89it/s]Ref scores:  86%|████████▌ | 857/1000 [02:41<00:28,  5.03it/s]Ref scores:  86%|████████▌ | 858/1000 [02:41<00:28,  5.04it/s]Ref scores:  86%|████████▌ | 859/1000 [02:41<00:28,  4.92it/s]Ref scores:  86%|████████▌ | 860/1000 [02:42<00:27,  5.09it/s]Ref scores:  86%|████████▌ | 861/1000 [02:42<00:26,  5.26it/s]Ref scores:  86%|████████▌ | 862/1000 [02:42<00:22,  6.01it/s]Ref scores:  86%|████████▋ | 863/1000 [02:42<00:22,  6.16it/s]Ref scores:  86%|████████▋ | 864/1000 [02:42<00:21,  6.21it/s]Ref scores:  86%|████████▋ | 865/1000 [02:42<00:23,  5.84it/s]Ref scores:  87%|████████▋ | 866/1000 [02:43<00:23,  5.79it/s]Ref scores:  87%|████████▋ | 867/1000 [02:43<00:23,  5.70it/s]Ref scores:  87%|████████▋ | 868/1000 [02:43<00:22,  5.92it/s]Ref scores:  87%|████████▋ | 869/1000 [02:43<00:21,  6.11it/s]Ref scores:  87%|████████▋ | 870/1000 [02:43<00:21,  5.95it/s]Ref scores:  87%|████████▋ | 871/1000 [02:43<00:22,  5.81it/s]Ref scores:  87%|████████▋ | 872/1000 [02:44<00:21,  5.99it/s]Ref scores:  87%|████████▋ | 873/1000 [02:44<00:22,  5.71it/s]Ref scores:  87%|████████▋ | 874/1000 [02:44<00:23,  5.37it/s]Ref scores:  88%|████████▊ | 875/1000 [02:44<00:23,  5.38it/s]Ref scores:  88%|████████▊ | 876/1000 [02:44<00:24,  5.07it/s]Ref scores:  88%|████████▊ | 877/1000 [02:44<00:22,  5.39it/s]Ref scores:  88%|████████▊ | 879/1000 [02:45<00:18,  6.39it/s]Ref scores:  88%|████████▊ | 880/1000 [02:45<00:19,  6.16it/s]Ref scores:  88%|████████▊ | 881/1000 [02:45<00:19,  6.02it/s]Ref scores:  88%|████████▊ | 882/1000 [02:45<00:18,  6.53it/s]Ref scores:  88%|████████▊ | 883/1000 [02:45<00:18,  6.16it/s]Ref scores:  88%|████████▊ | 884/1000 [02:46<00:19,  5.97it/s]Ref scores:  88%|████████▊ | 885/1000 [02:46<00:18,  6.10it/s]Ref scores:  89%|████████▊ | 886/1000 [02:46<00:19,  5.71it/s]Ref scores:  89%|████████▊ | 887/1000 [02:46<00:17,  6.38it/s]Ref scores:  89%|████████▉ | 888/1000 [02:46<00:18,  6.17it/s]Ref scores:  89%|████████▉ | 889/1000 [02:46<00:18,  5.92it/s]Ref scores:  89%|████████▉ | 890/1000 [02:47<00:19,  5.59it/s]Ref scores:  89%|████████▉ | 892/1000 [02:47<00:16,  6.63it/s]Ref scores:  89%|████████▉ | 893/1000 [02:47<00:15,  7.05it/s]Ref scores:  89%|████████▉ | 894/1000 [02:47<00:16,  6.26it/s]Ref scores:  90%|████████▉ | 895/1000 [02:47<00:17,  6.01it/s]Ref scores:  90%|████████▉ | 897/1000 [02:48<00:15,  6.57it/s]Ref scores:  90%|████████▉ | 898/1000 [02:48<00:17,  5.88it/s]Ref scores:  90%|████████▉ | 899/1000 [02:48<00:15,  6.37it/s]Ref scores:  90%|█████████ | 901/1000 [02:48<00:15,  6.35it/s]Ref scores:  90%|█████████ | 902/1000 [02:48<00:16,  5.96it/s]Ref scores:  90%|█████████ | 903/1000 [02:49<00:17,  5.59it/s]Ref scores:  90%|█████████ | 904/1000 [02:49<00:17,  5.42it/s]Ref scores:  90%|█████████ | 905/1000 [02:49<00:17,  5.45it/s]Ref scores:  91%|█████████ | 906/1000 [02:49<00:17,  5.33it/s]Ref scores:  91%|█████████ | 907/1000 [02:49<00:17,  5.30it/s]Ref scores:  91%|█████████ | 908/1000 [02:50<00:16,  5.43it/s]Ref scores:  91%|█████████ | 909/1000 [02:50<00:16,  5.44it/s]Ref scores:  91%|█████████ | 910/1000 [02:50<00:16,  5.51it/s]Ref scores:  91%|█████████ | 911/1000 [02:50<00:14,  6.12it/s]Ref scores:  91%|█████████ | 912/1000 [02:50<00:15,  5.68it/s]Ref scores:  91%|█████████▏| 913/1000 [02:51<00:15,  5.62it/s]Ref scores:  91%|█████████▏| 914/1000 [02:51<00:14,  5.84it/s]Ref scores:  92%|█████████▏| 915/1000 [02:51<00:14,  5.68it/s]Ref scores:  92%|█████████▏| 916/1000 [02:51<00:15,  5.54it/s]Ref scores:  92%|█████████▏| 917/1000 [02:51<00:15,  5.53it/s]Ref scores:  92%|█████████▏| 918/1000 [02:51<00:14,  5.48it/s]Ref scores:  92%|█████████▏| 919/1000 [02:52<00:14,  5.51it/s]Ref scores:  92%|█████████▏| 920/1000 [02:52<00:15,  5.31it/s]Ref scores:  92%|█████████▏| 921/1000 [02:52<00:14,  5.43it/s]Ref scores:  92%|█████████▏| 922/1000 [02:52<00:13,  5.61it/s]Ref scores:  92%|█████████▏| 923/1000 [02:52<00:13,  5.51it/s]Ref scores:  92%|█████████▏| 924/1000 [02:53<00:14,  5.42it/s]Ref scores:  92%|█████████▎| 925/1000 [02:53<00:13,  5.45it/s]Ref scores:  93%|█████████▎| 926/1000 [02:53<00:13,  5.49it/s]Ref scores:  93%|█████████▎| 927/1000 [02:53<00:11,  6.25it/s]Ref scores:  93%|█████████▎| 928/1000 [02:53<00:11,  6.10it/s]Ref scores:  93%|█████████▎| 929/1000 [02:53<00:12,  5.71it/s]Ref scores:  93%|█████████▎| 930/1000 [02:54<00:12,  5.59it/s]Ref scores:  93%|█████████▎| 931/1000 [02:54<00:12,  5.48it/s]Ref scores:  93%|█████████▎| 932/1000 [02:54<00:12,  5.50it/s]Ref scores:  93%|█████████▎| 933/1000 [02:54<00:12,  5.31it/s]Ref scores:  93%|█████████▎| 934/1000 [02:54<00:12,  5.38it/s]Ref scores:  94%|█████████▎| 935/1000 [02:55<00:12,  5.21it/s]Ref scores:  94%|█████████▎| 936/1000 [02:55<00:11,  5.35it/s]Ref scores:  94%|█████████▎| 937/1000 [02:55<00:11,  5.38it/s]Ref scores:  94%|█████████▍| 938/1000 [02:55<00:11,  5.41it/s]Ref scores:  94%|█████████▍| 939/1000 [02:55<00:11,  5.43it/s]Ref scores:  94%|█████████▍| 940/1000 [02:55<00:10,  5.52it/s]Ref scores:  94%|█████████▍| 941/1000 [02:56<00:09,  6.30it/s]Ref scores:  94%|█████████▍| 942/1000 [02:56<00:09,  6.06it/s]Ref scores:  94%|█████████▍| 943/1000 [02:56<00:10,  5.57it/s]Ref scores:  94%|█████████▍| 944/1000 [02:56<00:11,  4.88it/s]Ref scores:  94%|█████████▍| 945/1000 [02:56<00:10,  5.24it/s]Ref scores:  95%|█████████▍| 946/1000 [02:57<00:10,  5.12it/s]Ref scores:  95%|█████████▍| 947/1000 [02:57<00:10,  5.24it/s]Ref scores:  95%|█████████▍| 948/1000 [02:57<00:08,  6.02it/s]Ref scores:  95%|█████████▍| 949/1000 [02:57<00:10,  4.86it/s]Ref scores:  95%|█████████▌| 950/1000 [02:57<00:09,  5.05it/s]Ref scores:  95%|█████████▌| 951/1000 [02:57<00:09,  5.11it/s]Ref scores:  95%|█████████▌| 952/1000 [02:58<00:09,  5.25it/s]Ref scores:  95%|█████████▌| 954/1000 [02:58<00:07,  6.01it/s]Ref scores:  96%|█████████▌| 955/1000 [02:58<00:07,  5.85it/s]Ref scores:  96%|█████████▌| 956/1000 [02:58<00:07,  6.02it/s]Ref scores:  96%|█████████▌| 957/1000 [02:58<00:07,  5.89it/s]Ref scores:  96%|█████████▌| 958/1000 [02:59<00:07,  5.72it/s]Ref scores:  96%|█████████▌| 959/1000 [02:59<00:06,  6.33it/s]Ref scores:  96%|█████████▌| 960/1000 [02:59<00:05,  6.85it/s]Ref scores:  96%|█████████▌| 961/1000 [02:59<00:06,  6.42it/s]Ref scores:  96%|█████████▌| 962/1000 [02:59<00:06,  5.72it/s]Ref scores:  96%|█████████▋| 963/1000 [02:59<00:06,  5.88it/s]Ref scores:  96%|█████████▋| 964/1000 [03:00<00:07,  4.80it/s]Ref scores:  96%|█████████▋| 965/1000 [03:00<00:07,  4.96it/s]Ref scores:  97%|█████████▋| 966/1000 [03:00<00:06,  5.08it/s]Ref scores:  97%|█████████▋| 967/1000 [03:00<00:06,  5.03it/s]Ref scores:  97%|█████████▋| 968/1000 [03:00<00:06,  5.15it/s]Ref scores:  97%|█████████▋| 969/1000 [03:01<00:05,  5.24it/s]Ref scores:  97%|█████████▋| 970/1000 [03:01<00:05,  5.37it/s]Ref scores:  97%|█████████▋| 971/1000 [03:01<00:05,  5.66it/s]Ref scores:  97%|█████████▋| 972/1000 [03:01<00:05,  5.42it/s]Ref scores:  97%|█████████▋| 973/1000 [03:01<00:05,  5.39it/s]Ref scores:  97%|█████████▋| 974/1000 [03:02<00:04,  5.44it/s]Ref scores:  98%|█████████▊| 975/1000 [03:02<00:04,  5.80it/s]Ref scores:  98%|█████████▊| 976/1000 [03:02<00:04,  5.98it/s]Ref scores:  98%|█████████▊| 977/1000 [03:02<00:04,  5.60it/s]Ref scores:  98%|█████████▊| 978/1000 [03:02<00:03,  5.61it/s]Ref scores:  98%|█████████▊| 979/1000 [03:02<00:03,  5.30it/s]Ref scores:  98%|█████████▊| 980/1000 [03:03<00:03,  5.04it/s]Ref scores:  98%|█████████▊| 981/1000 [03:03<00:03,  5.16it/s]Ref scores:  98%|█████████▊| 982/1000 [03:03<00:03,  5.51it/s]Ref scores:  98%|█████████▊| 983/1000 [03:03<00:03,  5.40it/s]Ref scores:  98%|█████████▊| 984/1000 [03:03<00:02,  5.34it/s]Ref scores:  98%|█████████▊| 985/1000 [03:04<00:02,  5.39it/s]Ref scores:  99%|█████████▊| 986/1000 [03:04<00:02,  5.40it/s]Ref scores:  99%|█████████▊| 987/1000 [03:04<00:02,  5.47it/s]Ref scores:  99%|█████████▉| 988/1000 [03:04<00:02,  5.30it/s]Ref scores:  99%|█████████▉| 989/1000 [03:04<00:02,  5.38it/s]Ref scores:  99%|█████████▉| 990/1000 [03:05<00:01,  5.43it/s]Ref scores:  99%|█████████▉| 991/1000 [03:05<00:01,  5.43it/s]Ref scores:  99%|█████████▉| 992/1000 [03:05<00:01,  5.26it/s]Ref scores:  99%|█████████▉| 993/1000 [03:05<00:01,  5.26it/s]Ref scores:  99%|█████████▉| 994/1000 [03:05<00:01,  4.99it/s]Ref scores: 100%|█████████▉| 995/1000 [03:06<00:01,  4.95it/s]Ref scores: 100%|█████████▉| 996/1000 [03:06<00:00,  5.08it/s]Ref scores: 100%|█████████▉| 997/1000 [03:06<00:00,  5.23it/s]Ref scores: 100%|█████████▉| 998/1000 [03:06<00:00,  5.02it/s]Ref scores: 100%|█████████▉| 999/1000 [03:06<00:00,  4.93it/s]Ref scores: 100%|██████████| 1000/1000 [03:06<00:00,  5.09it/s]Ref scores: 100%|██████████| 1000/1000 [03:07<00:00,  5.35it/s]
DONE (7.87s)
DONE (8.26s)
Computing criterion:   0%|          | 0/20 [00:00<?, ?it/s]Computing criterion:   5%|▌         | 1/20 [00:05<01:48,  5.70s/it]Computing criterion:  10%|█         | 2/20 [00:11<01:42,  5.69s/it]Computing criterion:  15%|█▌        | 3/20 [00:16<01:35,  5.60s/it]Computing criterion:  20%|██        | 4/20 [00:22<01:30,  5.68s/it]Computing criterion:  25%|██▌       | 5/20 [00:29<01:30,  6.02s/it]Computing criterion:  30%|███       | 6/20 [00:36<01:29,  6.40s/it]Computing criterion:  35%|███▌      | 7/20 [00:43<01:26,  6.65s/it]Computing criterion:  40%|████      | 8/20 [00:49<01:16,  6.42s/it]Computing criterion:  45%|████▌     | 9/20 [00:55<01:08,  6.19s/it]Computing criterion:  50%|█████     | 10/20 [01:00<01:00,  6.03s/it]Computing criterion:  55%|█████▌    | 11/20 [01:05<00:50,  5.59s/it]Computing criterion:  60%|██████    | 12/20 [01:12<00:47,  5.91s/it]Computing criterion:  65%|██████▌   | 13/20 [01:16<00:37,  5.38s/it]Computing criterion:  70%|███████   | 14/20 [01:20<00:30,  5.04s/it]Computing criterion:  75%|███████▌  | 15/20 [01:25<00:25,  5.03s/it]Computing criterion:  80%|████████  | 16/20 [01:29<00:19,  4.86s/it]Computing criterion:  85%|████████▌ | 17/20 [01:34<00:14,  4.74s/it]Computing criterion:  90%|█████████ | 18/20 [01:41<00:10,  5.40s/it]Computing criterion:  95%|█████████▌| 19/20 [01:45<00:05,  5.01s/it]Computing criterion: 100%|██████████| 20/20 [01:49<00:00,  4.70s/it]Computing criterion: 100%|██████████| 20/20 [01:49<00:00,  5.47s/it]
Ref scores:   0%|          | 0/1000 [00:00<?, ?it/s]Ref scores:   0%|          | 1/1000 [00:02<34:05,  2.05s/it]Ref scores:   0%|          | 2/1000 [00:02<15:26,  1.08it/s]Ref scores:   0%|          | 3/1000 [00:02<09:29,  1.75it/s]Ref scores:   0%|          | 4/1000 [00:02<06:36,  2.51it/s]Ref scores:   0%|          | 5/1000 [00:02<05:39,  2.93it/s]Ref scores:   1%|          | 6/1000 [00:02<05:06,  3.25it/s]Ref scores:   1%|          | 7/1000 [00:03<04:36,  3.58it/s]Ref scores:   1%|          | 8/1000 [00:03<04:03,  4.08it/s]Ref scores:   1%|          | 9/1000 [00:03<03:38,  4.54it/s]Ref scores:   1%|          | 10/1000 [00:03<03:24,  4.84it/s]Ref scores:   1%|          | 11/1000 [00:03<03:12,  5.14it/s]Ref scores:   1%|          | 12/1000 [00:04<03:04,  5.35it/s]Ref scores:   1%|▏         | 13/1000 [00:04<03:39,  4.51it/s]Ref scores:   1%|▏         | 14/1000 [00:04<03:35,  4.58it/s]Ref scores:   2%|▏         | 15/1000 [00:04<03:03,  5.37it/s]Ref scores:   2%|▏         | 16/1000 [00:04<03:13,  5.09it/s]Ref scores:   2%|▏         | 17/1000 [00:05<02:57,  5.54it/s]Ref scores:   2%|▏         | 18/1000 [00:05<02:46,  5.91it/s]Ref scores:   2%|▏         | 19/1000 [00:05<02:38,  6.21it/s]Ref scores:   2%|▏         | 20/1000 [00:05<02:33,  6.38it/s]Ref scores:   2%|▏         | 21/1000 [00:05<02:31,  6.46it/s]Ref scores:   2%|▏         | 22/1000 [00:05<02:29,  6.54it/s]Ref scores:   2%|▏         | 23/1000 [00:05<02:18,  7.06it/s]Ref scores:   2%|▏         | 24/1000 [00:06<02:19,  6.98it/s]Ref scores:   2%|▎         | 25/1000 [00:06<02:21,  6.91it/s]Ref scores:   3%|▎         | 26/1000 [00:06<02:52,  5.66it/s]Ref scores:   3%|▎         | 27/1000 [00:06<03:01,  5.36it/s]Ref scores:   3%|▎         | 28/1000 [00:06<02:49,  5.74it/s]Ref scores:   3%|▎         | 29/1000 [00:07<03:10,  5.10it/s]Ref scores:   3%|▎         | 30/1000 [00:07<02:55,  5.54it/s]Ref scores:   3%|▎         | 31/1000 [00:07<02:43,  5.92it/s]Ref scores:   3%|▎         | 32/1000 [00:07<03:09,  5.12it/s]Ref scores:   3%|▎         | 33/1000 [00:07<02:45,  5.83it/s]Ref scores:   3%|▎         | 34/1000 [00:07<02:39,  6.07it/s]Ref scores:   4%|▎         | 35/1000 [00:07<02:32,  6.31it/s]Ref scores:   4%|▎         | 36/1000 [00:08<02:28,  6.48it/s]Ref scores:   4%|▎         | 37/1000 [00:08<02:25,  6.64it/s]Ref scores:   4%|▍         | 38/1000 [00:08<02:15,  7.12it/s]Ref scores:   4%|▍         | 39/1000 [00:08<02:07,  7.52it/s]Ref scores:   4%|▍         | 40/1000 [00:08<02:02,  7.86it/s]Ref scores:   4%|▍         | 41/1000 [00:08<02:23,  6.66it/s]Ref scores:   4%|▍         | 42/1000 [00:08<02:23,  6.69it/s]Ref scores:   4%|▍         | 43/1000 [00:09<02:22,  6.73it/s]Ref scores:   4%|▍         | 44/1000 [00:09<02:55,  5.45it/s]Ref scores:   4%|▍         | 45/1000 [00:09<02:43,  5.85it/s]Ref scores:   5%|▍         | 46/1000 [00:09<02:34,  6.17it/s]Ref scores:   5%|▍         | 47/1000 [00:09<02:33,  6.19it/s]Ref scores:   5%|▍         | 48/1000 [00:09<02:28,  6.43it/s]Ref scores:   5%|▍         | 49/1000 [00:10<02:44,  5.77it/s]Ref scores:   5%|▌         | 50/1000 [00:10<02:35,  6.10it/s]Ref scores:   5%|▌         | 51/1000 [00:10<03:36,  4.38it/s]Ref scores:   5%|▌         | 52/1000 [00:10<03:12,  4.93it/s]Ref scores:   5%|▌         | 53/1000 [00:10<02:55,  5.40it/s]Ref scores:   5%|▌         | 54/1000 [00:11<03:37,  4.36it/s]Ref scores:   6%|▌         | 55/1000 [00:11<03:33,  4.43it/s]Ref scores:   6%|▌         | 56/1000 [00:11<03:09,  4.98it/s]Ref scores:   6%|▌         | 57/1000 [00:11<02:52,  5.47it/s]Ref scores:   6%|▌         | 58/1000 [00:11<02:40,  5.86it/s]Ref scores:   6%|▌         | 59/1000 [00:12<02:36,  6.00it/s]Ref scores:   6%|▌         | 60/1000 [00:12<02:28,  6.31it/s]Ref scores:   6%|▌         | 61/1000 [00:12<02:23,  6.53it/s]Ref scores:   6%|▌         | 62/1000 [00:12<02:20,  6.68it/s]Ref scores:   6%|▋         | 63/1000 [00:12<02:19,  6.70it/s]Ref scores:   6%|▋         | 64/1000 [00:12<02:19,  6.72it/s]Ref scores:   6%|▋         | 65/1000 [00:12<02:22,  6.55it/s]Ref scores:   7%|▋         | 66/1000 [00:13<02:20,  6.67it/s]Ref scores:   7%|▋         | 67/1000 [00:13<02:18,  6.75it/s]Ref scores:   7%|▋         | 68/1000 [00:13<02:21,  6.59it/s]Ref scores:   7%|▋         | 69/1000 [00:13<02:19,  6.67it/s]Ref scores:   7%|▋         | 70/1000 [00:13<02:51,  5.44it/s]Ref scores:   7%|▋         | 71/1000 [00:13<02:40,  5.78it/s]Ref scores:   7%|▋         | 72/1000 [00:14<02:33,  6.06it/s]Ref scores:   7%|▋         | 73/1000 [00:14<02:28,  6.24it/s]Ref scores:   7%|▋         | 74/1000 [00:14<02:29,  6.20it/s]Ref scores:   8%|▊         | 75/1000 [00:14<02:44,  5.62it/s]Ref scores:   8%|▊         | 76/1000 [00:14<02:46,  5.56it/s]Ref scores:   8%|▊         | 77/1000 [00:14<02:34,  5.96it/s]Ref scores:   8%|▊         | 78/1000 [00:15<02:39,  5.79it/s]Ref scores:   8%|▊         | 79/1000 [00:15<02:37,  5.84it/s]Ref scores:   8%|▊         | 80/1000 [00:15<02:35,  5.91it/s]Ref scores:   8%|▊         | 81/1000 [00:15<02:36,  5.87it/s]Ref scores:   8%|▊         | 82/1000 [00:15<02:34,  5.96it/s]Ref scores:   8%|▊         | 83/1000 [00:15<02:33,  5.96it/s]Ref scores:   8%|▊         | 84/1000 [00:16<03:12,  4.76it/s]Ref scores:   8%|▊         | 85/1000 [00:16<02:57,  5.17it/s]Ref scores:   9%|▊         | 86/1000 [00:16<02:46,  5.48it/s]Ref scores:   9%|▊         | 87/1000 [00:16<02:48,  5.42it/s]Ref scores:   9%|▉         | 88/1000 [00:17<03:37,  4.19it/s]Ref scores:   9%|▉         | 89/1000 [00:17<03:19,  4.57it/s]Ref scores:   9%|▉         | 90/1000 [00:17<03:04,  4.93it/s]Ref scores:   9%|▉         | 91/1000 [00:17<02:57,  5.12it/s]Ref scores:   9%|▉         | 92/1000 [00:17<02:54,  5.22it/s]Ref scores:   9%|▉         | 93/1000 [00:17<02:34,  5.85it/s]Ref scores:   9%|▉         | 94/1000 [00:18<02:34,  5.85it/s]Ref scores:  10%|▉         | 95/1000 [00:18<02:40,  5.63it/s]Ref scores:  10%|▉         | 96/1000 [00:18<02:43,  5.52it/s]Ref scores:  10%|▉         | 97/1000 [00:18<02:46,  5.42it/s]Ref scores:  10%|▉         | 98/1000 [00:18<02:49,  5.32it/s]Ref scores:  10%|▉         | 99/1000 [00:19<02:50,  5.29it/s]Ref scores:  10%|█         | 100/1000 [00:19<02:47,  5.37it/s]Ref scores:  10%|█         | 101/1000 [00:19<02:41,  5.56it/s]Ref scores:  10%|█         | 102/1000 [00:19<03:35,  4.16it/s]Ref scores:  10%|█         | 103/1000 [00:20<03:10,  4.71it/s]Ref scores:  10%|█         | 104/1000 [00:20<02:57,  5.06it/s]Ref scores:  10%|█         | 105/1000 [00:20<02:45,  5.41it/s]Ref scores:  11%|█         | 106/1000 [00:20<02:41,  5.53it/s]Ref scores:  11%|█         | 107/1000 [00:20<03:03,  4.85it/s]Ref scores:  11%|█         | 108/1000 [00:20<02:48,  5.29it/s]Ref scores:  11%|█         | 109/1000 [00:21<02:43,  5.43it/s]Ref scores:  11%|█         | 110/1000 [00:21<02:38,  5.61it/s]Ref scores:  11%|█         | 111/1000 [00:21<02:31,  5.87it/s]Ref scores:  11%|█         | 112/1000 [00:21<02:29,  5.95it/s]Ref scores:  11%|█▏        | 113/1000 [00:21<02:26,  6.07it/s]Ref scores:  11%|█▏        | 114/1000 [00:21<02:27,  5.99it/s]Ref scores:  12%|█▏        | 115/1000 [00:22<02:22,  6.23it/s]Ref scores:  12%|█▏        | 116/1000 [00:22<02:49,  5.23it/s]Ref scores:  12%|█▏        | 117/1000 [00:22<03:37,  4.07it/s]Ref scores:  12%|█▏        | 118/1000 [00:22<03:58,  3.70it/s]Ref scores:  12%|█▏        | 119/1000 [00:23<03:38,  4.04it/s]Ref scores:  12%|█▏        | 120/1000 [00:23<03:57,  3.71it/s]Ref scores:  12%|█▏        | 121/1000 [00:23<03:32,  4.13it/s]Ref scores:  12%|█▏        | 122/1000 [00:23<03:13,  4.55it/s]Ref scores:  12%|█▏        | 123/1000 [00:24<03:18,  4.41it/s]Ref scores:  12%|█▏        | 124/1000 [00:24<04:05,  3.57it/s]Ref scores:  12%|█▎        | 125/1000 [00:24<04:11,  3.48it/s]Ref scores:  13%|█▎        | 126/1000 [00:24<03:32,  4.11it/s]Ref scores:  13%|█▎        | 127/1000 [00:25<03:34,  4.07it/s]Ref scores:  13%|█▎        | 128/1000 [00:25<03:49,  3.80it/s]Ref scores:  13%|█▎        | 129/1000 [00:25<03:35,  4.04it/s]Ref scores:  13%|█▎        | 130/1000 [00:25<03:13,  4.50it/s]Ref scores:  13%|█▎        | 131/1000 [00:26<02:58,  4.88it/s]Ref scores:  13%|█▎        | 132/1000 [00:26<03:05,  4.69it/s]Ref scores:  13%|█▎        | 133/1000 [00:26<03:18,  4.37it/s]Ref scores:  13%|█▎        | 134/1000 [00:26<03:24,  4.24it/s]Ref scores:  14%|█▎        | 135/1000 [00:26<03:12,  4.49it/s]Ref scores:  14%|█▎        | 136/1000 [00:27<02:57,  4.85it/s]Ref scores:  14%|█▎        | 137/1000 [00:27<03:26,  4.17it/s]Ref scores:  14%|█▍        | 138/1000 [00:27<04:09,  3.45it/s]Ref scores:  14%|█▍        | 139/1000 [00:28<04:25,  3.24it/s]Ref scores:  14%|█▍        | 140/1000 [00:28<05:31,  2.59it/s]Ref scores:  14%|█▍        | 141/1000 [00:29<06:40,  2.14it/s]Ref scores:  14%|█▍        | 142/1000 [00:29<05:38,  2.54it/s]Ref scores:  14%|█▍        | 143/1000 [00:30<05:20,  2.67it/s]Ref scores:  14%|█▍        | 144/1000 [00:30<04:36,  3.10it/s]Ref scores:  14%|█▍        | 145/1000 [00:30<03:59,  3.56it/s]Ref scores:  15%|█▍        | 146/1000 [00:30<03:33,  4.00it/s]Ref scores:  15%|█▍        | 147/1000 [00:30<03:13,  4.42it/s]Ref scores:  15%|█▍        | 148/1000 [00:31<03:45,  3.77it/s]Ref scores:  15%|█▍        | 149/1000 [00:31<03:34,  3.97it/s]Ref scores:  15%|█▌        | 150/1000 [00:31<04:20,  3.26it/s]Ref scores:  15%|█▌        | 151/1000 [00:32<04:18,  3.29it/s]Ref scores:  15%|█▌        | 152/1000 [00:32<04:06,  3.44it/s]Ref scores:  15%|█▌        | 153/1000 [00:32<03:39,  3.86it/s]Ref scores:  15%|█▌        | 154/1000 [00:32<04:13,  3.34it/s]Ref scores:  16%|█▌        | 155/1000 [00:33<03:55,  3.58it/s]Ref scores:  16%|█▌        | 156/1000 [00:33<03:22,  4.17it/s]Ref scores:  16%|█▌        | 157/1000 [00:33<03:17,  4.27it/s]Ref scores:  16%|█▌        | 158/1000 [00:33<02:55,  4.78it/s]Ref scores:  16%|█▌        | 159/1000 [00:33<02:41,  5.21it/s]Ref scores:  16%|█▌        | 160/1000 [00:33<02:35,  5.42it/s]Ref scores:  16%|█▌        | 161/1000 [00:34<02:55,  4.78it/s]Ref scores:  16%|█▌        | 162/1000 [00:34<02:38,  5.28it/s]Ref scores:  16%|█▋        | 163/1000 [00:34<02:43,  5.11it/s]Ref scores:  16%|█▋        | 164/1000 [00:34<02:31,  5.53it/s]Ref scores:  16%|█▋        | 165/1000 [00:34<02:18,  6.02it/s]Ref scores:  17%|█▋        | 166/1000 [00:35<02:19,  5.98it/s]Ref scores:  17%|█▋        | 167/1000 [00:35<02:16,  6.12it/s]Ref scores:  17%|█▋        | 168/1000 [00:35<02:39,  5.22it/s]Ref scores:  17%|█▋        | 169/1000 [00:35<02:27,  5.65it/s]Ref scores:  17%|█▋        | 170/1000 [00:35<02:35,  5.32it/s]Ref scores:  17%|█▋        | 171/1000 [00:35<02:24,  5.74it/s]Ref scores:  17%|█▋        | 172/1000 [00:36<02:34,  5.35it/s]Ref scores:  17%|█▋        | 173/1000 [00:36<02:24,  5.73it/s]Ref scores:  17%|█▋        | 174/1000 [00:36<02:46,  4.97it/s]Ref scores:  18%|█▊        | 175/1000 [00:36<02:32,  5.42it/s]Ref scores:  18%|█▊        | 176/1000 [00:36<02:22,  5.78it/s]Ref scores:  18%|█▊        | 177/1000 [00:36<02:14,  6.11it/s]Ref scores:  18%|█▊        | 178/1000 [00:37<02:16,  6.01it/s]Ref scores:  18%|█▊        | 179/1000 [00:37<02:13,  6.15it/s]Ref scores:  18%|█▊        | 180/1000 [00:37<02:08,  6.40it/s]Ref scores:  18%|█▊        | 181/1000 [00:37<02:04,  6.59it/s]Ref scores:  18%|█▊        | 182/1000 [00:37<02:17,  5.94it/s]Ref scores:  18%|█▊        | 183/1000 [00:37<02:14,  6.07it/s]Ref scores:  18%|█▊        | 184/1000 [00:38<02:08,  6.37it/s]Ref scores:  18%|█▊        | 185/1000 [00:38<02:20,  5.81it/s]Ref scores:  19%|█▊        | 186/1000 [00:38<02:18,  5.87it/s]Ref scores:  19%|█▊        | 187/1000 [00:38<02:41,  5.05it/s]Ref scores:  19%|█▉        | 188/1000 [00:38<02:43,  4.95it/s]Ref scores:  19%|█▉        | 189/1000 [00:39<02:30,  5.37it/s]Ref scores:  19%|█▉        | 190/1000 [00:39<02:21,  5.73it/s]Ref scores:  19%|█▉        | 191/1000 [00:39<02:15,  5.98it/s]Ref scores:  19%|█▉        | 192/1000 [00:39<02:13,  6.06it/s]Ref scores:  19%|█▉        | 193/1000 [00:39<02:09,  6.25it/s]Ref scores:  19%|█▉        | 194/1000 [00:40<02:41,  4.98it/s]Ref scores:  20%|█▉        | 195/1000 [00:40<02:33,  5.26it/s]Ref scores:  20%|█▉        | 196/1000 [00:40<03:00,  4.46it/s]Ref scores:  20%|█▉        | 197/1000 [00:40<02:33,  5.23it/s]Ref scores:  20%|█▉        | 198/1000 [00:40<02:25,  5.50it/s]Ref scores:  20%|█▉        | 199/1000 [00:40<02:16,  5.88it/s]Ref scores:  20%|██        | 200/1000 [00:41<02:10,  6.14it/s]Ref scores:  20%|██        | 201/1000 [00:41<02:06,  6.34it/s]Ref scores:  20%|██        | 202/1000 [00:41<02:03,  6.47it/s]Ref scores:  20%|██        | 203/1000 [00:41<02:19,  5.71it/s]Ref scores:  20%|██        | 204/1000 [00:41<02:11,  6.04it/s]Ref scores:  20%|██        | 205/1000 [00:41<02:08,  6.19it/s]Ref scores:  21%|██        | 206/1000 [00:41<02:04,  6.37it/s]Ref scores:  21%|██        | 207/1000 [00:42<01:53,  7.01it/s]Ref scores:  21%|██        | 208/1000 [00:42<01:56,  6.79it/s]Ref scores:  21%|██        | 209/1000 [00:42<01:56,  6.81it/s]Ref scores:  21%|██        | 210/1000 [00:42<02:21,  5.58it/s]Ref scores:  21%|██        | 211/1000 [00:42<02:07,  6.17it/s]Ref scores:  21%|██        | 212/1000 [00:42<02:03,  6.36it/s]Ref scores:  21%|██▏       | 213/1000 [00:43<02:02,  6.45it/s]Ref scores:  21%|██▏       | 214/1000 [00:43<02:16,  5.75it/s]Ref scores:  22%|██▏       | 215/1000 [00:43<02:06,  6.20it/s]Ref scores:  22%|██▏       | 216/1000 [00:43<02:03,  6.37it/s]Ref scores:  22%|██▏       | 217/1000 [00:43<02:17,  5.70it/s]Ref scores:  22%|██▏       | 218/1000 [00:43<02:10,  6.00it/s]Ref scores:  22%|██▏       | 219/1000 [00:44<02:06,  6.19it/s]Ref scores:  22%|██▏       | 220/1000 [00:44<02:03,  6.33it/s]Ref scores:  22%|██▏       | 221/1000 [00:44<02:00,  6.49it/s]Ref scores:  22%|██▏       | 222/1000 [00:44<01:57,  6.64it/s]Ref scores:  22%|██▏       | 223/1000 [00:44<02:13,  5.83it/s]Ref scores:  22%|██▏       | 224/1000 [00:44<02:08,  6.06it/s]Ref scores:  22%|██▎       | 225/1000 [00:45<02:03,  6.27it/s]Ref scores:  23%|██▎       | 226/1000 [00:45<02:18,  5.61it/s]Ref scores:  23%|██▎       | 227/1000 [00:45<02:09,  5.95it/s]Ref scores:  23%|██▎       | 228/1000 [00:45<02:01,  6.36it/s]Ref scores:  23%|██▎       | 229/1000 [00:45<01:58,  6.50it/s]Ref scores:  23%|██▎       | 230/1000 [00:45<02:12,  5.81it/s]Ref scores:  23%|██▎       | 231/1000 [00:46<02:08,  6.00it/s]Ref scores:  23%|██▎       | 232/1000 [00:46<02:03,  6.21it/s]Ref scores:  23%|██▎       | 233/1000 [00:46<02:15,  5.68it/s]Ref scores:  23%|██▎       | 234/1000 [00:46<02:07,  6.00it/s]Ref scores:  24%|██▎       | 235/1000 [00:46<02:02,  6.23it/s]Ref scores:  24%|██▎       | 236/1000 [00:46<02:02,  6.24it/s]Ref scores:  24%|██▎       | 237/1000 [00:47<01:58,  6.43it/s]Ref scores:  24%|██▍       | 238/1000 [00:47<02:12,  5.75it/s]Ref scores:  24%|██▍       | 239/1000 [00:47<02:06,  6.00it/s]Ref scores:  24%|██▍       | 240/1000 [00:47<02:01,  6.26it/s]Ref scores:  24%|██▍       | 241/1000 [00:47<01:59,  6.33it/s]Ref scores:  24%|██▍       | 242/1000 [00:47<02:15,  5.60it/s]Ref scores:  24%|██▍       | 243/1000 [00:48<02:08,  5.88it/s]Ref scores:  24%|██▍       | 244/1000 [00:48<02:21,  5.33it/s]Ref scores:  24%|██▍       | 245/1000 [00:48<02:12,  5.70it/s]Ref scores:  25%|██▍       | 246/1000 [00:48<02:04,  6.04it/s]Ref scores:  25%|██▍       | 247/1000 [00:48<02:26,  5.15it/s]Ref scores:  25%|██▍       | 248/1000 [00:49<02:30,  5.00it/s]Ref scores:  25%|██▍       | 249/1000 [00:49<02:45,  4.53it/s]Ref scores:  25%|██▌       | 250/1000 [00:49<02:43,  4.58it/s]Ref scores:  25%|██▌       | 251/1000 [00:49<02:27,  5.09it/s]Ref scores:  25%|██▌       | 252/1000 [00:49<02:17,  5.43it/s]Ref scores:  25%|██▌       | 253/1000 [00:50<02:42,  4.60it/s]Ref scores:  25%|██▌       | 254/1000 [00:50<02:34,  4.84it/s]Ref scores:  26%|██▌       | 255/1000 [00:50<02:19,  5.33it/s]Ref scores:  26%|██▌       | 256/1000 [00:50<02:12,  5.62it/s]Ref scores:  26%|██▌       | 257/1000 [00:50<02:27,  5.04it/s]Ref scores:  26%|██▌       | 258/1000 [00:50<02:15,  5.47it/s]Ref scores:  26%|██▌       | 259/1000 [00:51<02:09,  5.72it/s]Ref scores:  26%|██▌       | 260/1000 [00:51<02:16,  5.41it/s]Ref scores:  26%|██▌       | 261/1000 [00:51<02:08,  5.77it/s]Ref scores:  26%|██▌       | 262/1000 [00:51<02:15,  5.45it/s]Ref scores:  26%|██▋       | 263/1000 [00:51<02:05,  5.86it/s]Ref scores:  26%|██▋       | 264/1000 [00:52<02:14,  5.46it/s]Ref scores:  26%|██▋       | 265/1000 [00:52<02:08,  5.72it/s]Ref scores:  27%|██▋       | 266/1000 [00:52<02:01,  6.06it/s]Ref scores:  27%|██▋       | 267/1000 [00:52<01:56,  6.29it/s]Ref scores:  27%|██▋       | 268/1000 [00:52<01:53,  6.44it/s]Ref scores:  27%|██▋       | 269/1000 [00:52<01:51,  6.58it/s]Ref scores:  27%|██▋       | 270/1000 [00:52<01:52,  6.52it/s]Ref scores:  27%|██▋       | 271/1000 [00:53<01:52,  6.50it/s]Ref scores:  27%|██▋       | 272/1000 [00:53<01:49,  6.63it/s]Ref scores:  27%|██▋       | 273/1000 [00:53<02:01,  6.00it/s]Ref scores:  27%|██▋       | 274/1000 [00:53<01:55,  6.31it/s]Ref scores:  28%|██▊       | 275/1000 [00:53<01:51,  6.49it/s]Ref scores:  28%|██▊       | 276/1000 [00:53<01:49,  6.60it/s]Ref scores:  28%|██▊       | 277/1000 [00:54<01:48,  6.67it/s]Ref scores:  28%|██▊       | 278/1000 [00:54<01:47,  6.72it/s]Ref scores:  28%|██▊       | 279/1000 [00:54<01:47,  6.73it/s]Ref scores:  28%|██▊       | 280/1000 [00:54<01:45,  6.84it/s]Ref scores:  28%|██▊       | 281/1000 [00:54<01:42,  7.01it/s]Ref scores:  28%|██▊       | 282/1000 [00:54<01:42,  6.98it/s]Ref scores:  28%|██▊       | 283/1000 [00:55<02:18,  5.19it/s]Ref scores:  28%|██▊       | 284/1000 [00:55<02:33,  4.67it/s]Ref scores:  28%|██▊       | 285/1000 [00:55<02:17,  5.18it/s]Ref scores:  29%|██▊       | 286/1000 [00:55<02:07,  5.58it/s]Ref scores:  29%|██▊       | 287/1000 [00:55<02:00,  5.92it/s]Ref scores:  29%|██▉       | 288/1000 [00:55<01:55,  6.18it/s]Ref scores:  29%|██▉       | 289/1000 [00:56<02:15,  5.23it/s]Ref scores:  29%|██▉       | 290/1000 [00:56<02:23,  4.95it/s]Ref scores:  29%|██▉       | 291/1000 [00:56<02:09,  5.45it/s]Ref scores:  29%|██▉       | 292/1000 [00:56<02:01,  5.84it/s]Ref scores:  29%|██▉       | 293/1000 [00:56<02:12,  5.33it/s]Ref scores:  29%|██▉       | 294/1000 [00:57<03:36,  3.26it/s]Ref scores:  30%|██▉       | 295/1000 [00:57<03:28,  3.39it/s]Ref scores:  30%|██▉       | 296/1000 [00:57<03:08,  3.73it/s]Ref scores:  30%|██▉       | 297/1000 [00:58<03:09,  3.71it/s]Ref scores:  30%|██▉       | 298/1000 [00:58<04:10,  2.81it/s]Ref scores:  30%|██▉       | 299/1000 [00:59<05:44,  2.03it/s]Ref scores:  30%|███       | 300/1000 [01:00<05:35,  2.09it/s]Ref scores:  30%|███       | 301/1000 [01:00<05:18,  2.19it/s]Ref scores:  30%|███       | 302/1000 [01:00<04:49,  2.41it/s]Ref scores:  30%|███       | 303/1000 [01:01<04:44,  2.45it/s]Ref scores:  30%|███       | 304/1000 [01:01<05:07,  2.26it/s]Ref scores:  30%|███       | 305/1000 [01:01<04:31,  2.56it/s]Ref scores:  31%|███       | 306/1000 [01:02<04:28,  2.59it/s]Ref scores:  31%|███       | 307/1000 [01:02<04:03,  2.84it/s]Ref scores:  31%|███       | 308/1000 [01:02<03:25,  3.38it/s]Ref scores:  31%|███       | 309/1000 [01:02<02:53,  3.98it/s]Ref scores:  31%|███       | 310/1000 [01:03<02:31,  4.56it/s]Ref scores:  31%|███       | 311/1000 [01:03<02:17,  4.99it/s]Ref scores:  31%|███       | 312/1000 [01:03<02:07,  5.40it/s]Ref scores:  31%|███▏      | 313/1000 [01:03<02:22,  4.83it/s]Ref scores:  31%|███▏      | 314/1000 [01:03<02:38,  4.33it/s]Ref scores:  32%|███▏      | 315/1000 [01:04<02:19,  4.91it/s]Ref scores:  32%|███▏      | 316/1000 [01:04<02:06,  5.40it/s]Ref scores:  32%|███▏      | 317/1000 [01:04<02:29,  4.57it/s]Ref scores:  32%|███▏      | 318/1000 [01:04<02:13,  5.10it/s]Ref scores:  32%|███▏      | 319/1000 [01:04<02:02,  5.56it/s]Ref scores:  32%|███▏      | 320/1000 [01:04<01:54,  5.95it/s]Ref scores:  32%|███▏      | 321/1000 [01:05<01:51,  6.07it/s]Ref scores:  32%|███▏      | 322/1000 [01:05<01:48,  6.26it/s]Ref scores:  32%|███▏      | 323/1000 [01:05<01:46,  6.35it/s]Ref scores:  32%|███▏      | 324/1000 [01:05<01:42,  6.56it/s]Ref scores:  32%|███▎      | 325/1000 [01:05<01:57,  5.74it/s]Ref scores:  33%|███▎      | 326/1000 [01:05<01:50,  6.11it/s]Ref scores:  33%|███▎      | 327/1000 [01:06<01:58,  5.68it/s]Ref scores:  33%|███▎      | 328/1000 [01:06<01:52,  5.98it/s]Ref scores:  33%|███▎      | 329/1000 [01:06<02:04,  5.40it/s]Ref scores:  33%|███▎      | 330/1000 [01:06<01:52,  5.94it/s]Ref scores:  33%|███▎      | 331/1000 [01:06<01:51,  6.01it/s]Ref scores:  33%|███▎      | 332/1000 [01:06<02:02,  5.46it/s]Ref scores:  33%|███▎      | 333/1000 [01:07<01:54,  5.85it/s]Ref scores:  33%|███▎      | 334/1000 [01:07<02:20,  4.76it/s]Ref scores:  34%|███▎      | 335/1000 [01:07<02:20,  4.73it/s]Ref scores:  34%|███▎      | 336/1000 [01:07<02:06,  5.24it/s]Ref scores:  34%|███▎      | 337/1000 [01:07<02:12,  5.00it/s]Ref scores:  34%|███▍      | 338/1000 [01:08<02:18,  4.77it/s]Ref scores:  34%|███▍      | 339/1000 [01:08<02:05,  5.25it/s]Ref scores:  34%|███▍      | 340/1000 [01:08<01:56,  5.64it/s]Ref scores:  34%|███▍      | 341/1000 [01:08<01:52,  5.84it/s]Ref scores:  34%|███▍      | 342/1000 [01:08<01:47,  6.12it/s]Ref scores:  34%|███▍      | 343/1000 [01:08<01:46,  6.18it/s]Ref scores:  34%|███▍      | 344/1000 [01:09<01:42,  6.40it/s]Ref scores:  34%|███▍      | 345/1000 [01:09<01:41,  6.47it/s]Ref scores:  35%|███▍      | 346/1000 [01:09<01:38,  6.61it/s]Ref scores:  35%|███▍      | 347/1000 [01:09<01:35,  6.87it/s]Ref scores:  35%|███▍      | 348/1000 [01:09<01:34,  6.93it/s]Ref scores:  35%|███▍      | 349/1000 [01:09<01:36,  6.76it/s]Ref scores:  35%|███▌      | 350/1000 [01:09<01:37,  6.70it/s]Ref scores:  35%|███▌      | 351/1000 [01:10<01:38,  6.58it/s]Ref scores:  35%|███▌      | 352/1000 [01:10<01:48,  5.98it/s]Ref scores:  35%|███▌      | 353/1000 [01:10<01:43,  6.27it/s]Ref scores:  35%|███▌      | 354/1000 [01:10<01:37,  6.62it/s]Ref scores:  36%|███▌      | 355/1000 [01:10<01:48,  5.97it/s]Ref scores:  36%|███▌      | 356/1000 [01:10<01:43,  6.21it/s]Ref scores:  36%|███▌      | 357/1000 [01:11<01:33,  6.85it/s]Ref scores:  36%|███▌      | 358/1000 [01:11<01:50,  5.83it/s]Ref scores:  36%|███▌      | 359/1000 [01:11<01:42,  6.27it/s]Ref scores:  36%|███▌      | 360/1000 [01:11<01:54,  5.61it/s]Ref scores:  36%|███▌      | 361/1000 [01:11<01:42,  6.22it/s]Ref scores:  36%|███▌      | 362/1000 [01:11<01:39,  6.43it/s]Ref scores:  36%|███▋      | 363/1000 [01:12<01:49,  5.84it/s]Ref scores:  36%|███▋      | 364/1000 [01:12<01:42,  6.20it/s]Ref scores:  36%|███▋      | 365/1000 [01:12<01:40,  6.34it/s]Ref scores:  37%|███▋      | 366/1000 [01:12<01:49,  5.77it/s]Ref scores:  37%|███▋      | 367/1000 [01:12<01:43,  6.11it/s]Ref scores:  37%|███▋      | 368/1000 [01:12<01:40,  6.27it/s]Ref scores:  37%|███▋      | 369/1000 [01:13<01:38,  6.43it/s]Ref scores:  37%|███▋      | 370/1000 [01:13<02:03,  5.12it/s]Ref scores:  37%|███▋      | 371/1000 [01:13<01:57,  5.35it/s]Ref scores:  37%|███▋      | 372/1000 [01:13<01:50,  5.67it/s]Ref scores:  37%|███▋      | 373/1000 [01:13<01:46,  5.89it/s]Ref scores:  37%|███▋      | 374/1000 [01:13<01:41,  6.15it/s]Ref scores:  38%|███▊      | 375/1000 [01:14<02:07,  4.91it/s]Ref scores:  38%|███▊      | 376/1000 [01:14<01:55,  5.38it/s]Ref scores:  38%|███▊      | 377/1000 [01:14<01:47,  5.82it/s]Ref scores:  38%|███▊      | 378/1000 [01:14<01:41,  6.11it/s]Ref scores:  38%|███▊      | 379/1000 [01:14<01:38,  6.33it/s]Ref scores:  38%|███▊      | 380/1000 [01:15<01:51,  5.58it/s]Ref scores:  38%|███▊      | 381/1000 [01:15<01:44,  5.93it/s]Ref scores:  38%|███▊      | 382/1000 [01:15<01:39,  6.21it/s]Ref scores:  38%|███▊      | 383/1000 [01:15<01:37,  6.34it/s]Ref scores:  38%|███▊      | 384/1000 [01:15<01:36,  6.40it/s]Ref scores:  38%|███▊      | 385/1000 [01:15<01:27,  7.01it/s]Ref scores:  39%|███▊      | 386/1000 [01:15<01:29,  6.87it/s]Ref scores:  39%|███▊      | 387/1000 [01:16<01:45,  5.79it/s]Ref scores:  39%|███▉      | 388/1000 [01:16<01:43,  5.94it/s]Ref scores:  39%|███▉      | 389/1000 [01:16<01:40,  6.06it/s]Ref scores:  39%|███▉      | 390/1000 [01:16<01:48,  5.64it/s]Ref scores:  39%|███▉      | 391/1000 [01:16<01:37,  6.25it/s]Ref scores:  39%|███▉      | 392/1000 [01:16<01:37,  6.25it/s]Ref scores:  39%|███▉      | 393/1000 [01:17<01:32,  6.54it/s]Ref scores:  39%|███▉      | 394/1000 [01:17<01:30,  6.67it/s]Ref scores:  40%|███▉      | 395/1000 [01:17<01:44,  5.81it/s]Ref scores:  40%|███▉      | 396/1000 [01:17<01:55,  5.23it/s]Ref scores:  40%|███▉      | 397/1000 [01:17<01:58,  5.09it/s]Ref scores:  40%|███▉      | 398/1000 [01:18<01:49,  5.50it/s]Ref scores:  40%|███▉      | 399/1000 [01:18<01:56,  5.18it/s]Ref scores:  40%|████      | 400/1000 [01:18<01:48,  5.53it/s]Ref scores:  40%|████      | 401/1000 [01:18<01:42,  5.86it/s]Ref scores:  40%|████      | 402/1000 [01:18<02:04,  4.82it/s]Ref scores:  40%|████      | 403/1000 [01:19<01:53,  5.26it/s]Ref scores:  40%|████      | 404/1000 [01:19<01:45,  5.63it/s]Ref scores:  40%|████      | 405/1000 [01:19<01:40,  5.92it/s]Ref scores:  41%|████      | 406/1000 [01:19<01:36,  6.17it/s]Ref scores:  41%|████      | 407/1000 [01:19<01:34,  6.30it/s]Ref scores:  41%|████      | 408/1000 [01:19<01:31,  6.45it/s]Ref scores:  41%|████      | 409/1000 [01:19<01:30,  6.50it/s]Ref scores:  41%|████      | 410/1000 [01:20<01:29,  6.57it/s]Ref scores:  41%|████      | 411/1000 [01:20<01:41,  5.81it/s]Ref scores:  41%|████      | 412/1000 [01:20<01:29,  6.54it/s]Ref scores:  41%|████▏     | 413/1000 [01:20<01:28,  6.65it/s]Ref scores:  41%|████▏     | 414/1000 [01:20<01:26,  6.77it/s]Ref scores:  42%|████▏     | 415/1000 [01:20<01:27,  6.67it/s]Ref scores:  42%|████▏     | 416/1000 [01:20<01:26,  6.72it/s]Ref scores:  42%|████▏     | 417/1000 [01:21<01:26,  6.76it/s]Ref scores:  42%|████▏     | 418/1000 [01:21<01:25,  6.79it/s]Ref scores:  42%|████▏     | 419/1000 [01:21<01:26,  6.68it/s]Ref scores:  42%|████▏     | 420/1000 [01:21<01:25,  6.78it/s]Ref scores:  42%|████▏     | 421/1000 [01:21<01:56,  4.96it/s]Ref scores:  42%|████▏     | 422/1000 [01:22<01:57,  4.91it/s]Ref scores:  42%|████▏     | 423/1000 [01:22<01:58,  4.86it/s]Ref scores:  42%|████▏     | 424/1000 [01:22<02:20,  4.10it/s]Ref scores:  42%|████▎     | 425/1000 [01:22<02:15,  4.23it/s]Ref scores:  43%|████▎     | 426/1000 [01:23<02:10,  4.40it/s]Ref scores:  43%|████▎     | 427/1000 [01:23<01:58,  4.84it/s]Ref scores:  43%|████▎     | 428/1000 [01:23<01:47,  5.33it/s]Ref scores:  43%|████▎     | 429/1000 [01:23<01:51,  5.13it/s]Ref scores:  43%|████▎     | 430/1000 [01:23<01:41,  5.59it/s]Ref scores:  43%|████▎     | 431/1000 [01:23<01:30,  6.28it/s]Ref scores:  43%|████▎     | 432/1000 [01:23<01:22,  6.87it/s]Ref scores:  43%|████▎     | 433/1000 [01:24<01:32,  6.13it/s]Ref scores:  43%|████▎     | 434/1000 [01:24<01:53,  4.98it/s]Ref scores:  44%|████▎     | 435/1000 [01:24<01:38,  5.73it/s]Ref scores:  44%|████▎     | 436/1000 [01:24<01:33,  6.05it/s]Ref scores:  44%|████▎     | 437/1000 [01:24<01:42,  5.52it/s]Ref scores:  44%|████▍     | 438/1000 [01:25<01:36,  5.83it/s]Ref scores:  44%|████▍     | 439/1000 [01:25<01:26,  6.47it/s]Ref scores:  44%|████▍     | 440/1000 [01:25<01:19,  7.01it/s]Ref scores:  44%|████▍     | 441/1000 [01:25<01:20,  6.94it/s]Ref scores:  44%|████▍     | 442/1000 [01:25<01:20,  6.93it/s]Ref scores:  44%|████▍     | 443/1000 [01:25<01:19,  6.97it/s]Ref scores:  44%|████▍     | 444/1000 [01:25<01:30,  6.17it/s]Ref scores:  44%|████▍     | 445/1000 [01:26<01:26,  6.45it/s]Ref scores:  45%|████▍     | 446/1000 [01:26<01:35,  5.77it/s]Ref scores:  45%|████▍     | 447/1000 [01:26<01:31,  6.02it/s]Ref scores:  45%|████▍     | 448/1000 [01:26<01:38,  5.60it/s]Ref scores:  45%|████▍     | 449/1000 [01:26<01:32,  5.96it/s]Ref scores:  45%|████▌     | 450/1000 [01:26<01:27,  6.25it/s]Ref scores:  45%|████▌     | 451/1000 [01:27<01:35,  5.74it/s]Ref scores:  45%|████▌     | 452/1000 [01:27<01:48,  5.04it/s]Ref scores:  45%|████▌     | 453/1000 [01:27<01:50,  4.94it/s]Ref scores:  45%|████▌     | 454/1000 [01:27<01:40,  5.42it/s]Ref scores:  46%|████▌     | 455/1000 [01:27<01:32,  5.86it/s]Ref scores:  46%|████▌     | 456/1000 [01:28<01:28,  6.14it/s]Ref scores:  46%|████▌     | 457/1000 [01:28<01:19,  6.79it/s]Ref scores:  46%|████▌     | 458/1000 [01:28<01:19,  6.84it/s]Ref scores:  46%|████▌     | 459/1000 [01:28<01:19,  6.80it/s]Ref scores:  46%|████▌     | 460/1000 [01:28<01:13,  7.34it/s]Ref scores:  46%|████▌     | 461/1000 [01:28<01:35,  5.64it/s]Ref scores:  46%|████▌     | 462/1000 [01:28<01:30,  5.97it/s]Ref scores:  46%|████▋     | 463/1000 [01:29<01:28,  6.07it/s]Ref scores:  46%|████▋     | 464/1000 [01:29<01:25,  6.24it/s]Ref scores:  46%|████▋     | 465/1000 [01:29<01:25,  6.26it/s]Ref scores:  47%|████▋     | 466/1000 [01:29<01:23,  6.41it/s]Ref scores:  47%|████▋     | 467/1000 [01:29<01:23,  6.37it/s]Ref scores:  47%|████▋     | 468/1000 [01:29<01:32,  5.77it/s]Ref scores:  47%|████▋     | 469/1000 [01:30<01:26,  6.13it/s]Ref scores:  47%|████▋     | 470/1000 [01:30<01:22,  6.42it/s]Ref scores:  47%|████▋     | 471/1000 [01:30<01:21,  6.52it/s]Ref scores:  47%|████▋     | 472/1000 [01:30<01:29,  5.91it/s]Ref scores:  47%|████▋     | 473/1000 [01:30<01:25,  6.17it/s]Ref scores:  47%|████▋     | 474/1000 [01:30<01:22,  6.38it/s]Ref scores:  48%|████▊     | 475/1000 [01:31<01:20,  6.52it/s]Ref scores:  48%|████▊     | 476/1000 [01:31<01:14,  7.02it/s]Ref scores:  48%|████▊     | 477/1000 [01:31<01:16,  6.87it/s]Ref scores:  48%|████▊     | 478/1000 [01:31<01:32,  5.61it/s]Ref scores:  48%|████▊     | 479/1000 [01:31<02:01,  4.29it/s]Ref scores:  48%|████▊     | 480/1000 [01:32<01:44,  4.99it/s]Ref scores:  48%|████▊     | 481/1000 [01:32<01:35,  5.44it/s]Ref scores:  48%|████▊     | 482/1000 [01:32<01:26,  5.96it/s]Ref scores:  48%|████▊     | 483/1000 [01:32<01:23,  6.23it/s]Ref scores:  48%|████▊     | 484/1000 [01:32<01:19,  6.47it/s]Ref scores:  48%|████▊     | 485/1000 [01:32<01:34,  5.44it/s]Ref scores:  49%|████▊     | 486/1000 [01:32<01:23,  6.17it/s]Ref scores:  49%|████▊     | 487/1000 [01:33<01:19,  6.41it/s]Ref scores:  49%|████▉     | 488/1000 [01:33<01:19,  6.45it/s]Ref scores:  49%|████▉     | 489/1000 [01:33<01:18,  6.48it/s]Ref scores:  49%|████▉     | 490/1000 [01:33<01:16,  6.62it/s]Ref scores:  49%|████▉     | 491/1000 [01:33<01:15,  6.72it/s]Ref scores:  49%|████▉     | 492/1000 [01:33<01:14,  6.79it/s]Ref scores:  49%|████▉     | 493/1000 [01:33<01:14,  6.80it/s]Ref scores:  49%|████▉     | 494/1000 [01:34<01:13,  6.84it/s]Ref scores:  50%|████▉     | 495/1000 [01:34<01:13,  6.91it/s]Ref scores:  50%|████▉     | 496/1000 [01:34<01:12,  6.95it/s]Ref scores:  50%|████▉     | 497/1000 [01:34<01:24,  5.97it/s]Ref scores:  50%|████▉     | 498/1000 [01:34<01:20,  6.26it/s]Ref scores:  50%|████▉     | 499/1000 [01:35<01:35,  5.25it/s]Ref scores:  50%|█████     | 500/1000 [01:35<01:39,  5.02it/s]Ref scores:  50%|█████     | 501/1000 [01:35<01:31,  5.47it/s]Ref scores:  50%|█████     | 502/1000 [01:35<01:37,  5.13it/s]Ref scores:  50%|█████     | 503/1000 [01:35<01:29,  5.57it/s]Ref scores:  50%|█████     | 504/1000 [01:35<01:24,  5.89it/s]Ref scores:  50%|█████     | 505/1000 [01:36<01:29,  5.56it/s]Ref scores:  51%|█████     | 506/1000 [01:36<01:23,  5.92it/s]Ref scores:  51%|█████     | 507/1000 [01:36<01:46,  4.63it/s]Ref scores:  51%|█████     | 508/1000 [01:36<01:37,  5.07it/s]Ref scores:  51%|█████     | 509/1000 [01:36<01:28,  5.54it/s]Ref scores:  51%|█████     | 510/1000 [01:37<01:24,  5.79it/s]Ref scores:  51%|█████     | 511/1000 [01:37<01:29,  5.45it/s]Ref scores:  51%|█████     | 512/1000 [01:37<01:32,  5.25it/s]Ref scores:  51%|█████▏    | 513/1000 [01:37<01:35,  5.08it/s]Ref scores:  51%|█████▏    | 514/1000 [01:37<01:44,  4.66it/s]Ref scores:  52%|█████▏    | 515/1000 [01:38<01:43,  4.71it/s]Ref scores:  52%|█████▏    | 516/1000 [01:38<01:32,  5.23it/s]Ref scores:  52%|█████▏    | 517/1000 [01:38<01:25,  5.64it/s]Ref scores:  52%|█████▏    | 518/1000 [01:38<01:37,  4.93it/s]Ref scores:  52%|█████▏    | 519/1000 [01:38<01:30,  5.30it/s]Ref scores:  52%|█████▏    | 520/1000 [01:38<01:24,  5.70it/s]Ref scores:  52%|█████▏    | 521/1000 [01:39<01:18,  6.07it/s]Ref scores:  52%|█████▏    | 522/1000 [01:39<01:15,  6.32it/s]Ref scores:  52%|█████▏    | 523/1000 [01:39<01:22,  5.81it/s]Ref scores:  52%|█████▏    | 524/1000 [01:39<01:17,  6.12it/s]Ref scores:  52%|█████▎    | 525/1000 [01:39<01:14,  6.35it/s]Ref scores:  53%|█████▎    | 526/1000 [01:40<01:32,  5.10it/s]Ref scores:  53%|█████▎    | 527/1000 [01:40<01:43,  4.59it/s]Ref scores:  53%|█████▎    | 528/1000 [01:40<01:31,  5.18it/s]Ref scores:  53%|█████▎    | 529/1000 [01:40<01:23,  5.64it/s]Ref scores:  53%|█████▎    | 530/1000 [01:40<01:19,  5.90it/s]Ref scores:  53%|█████▎    | 531/1000 [01:40<01:25,  5.50it/s]Ref scores:  53%|█████▎    | 532/1000 [01:41<01:19,  5.89it/s]Ref scores:  53%|█████▎    | 533/1000 [01:41<01:14,  6.24it/s]Ref scores:  53%|█████▎    | 534/1000 [01:41<01:11,  6.50it/s]Ref scores:  54%|█████▎    | 535/1000 [01:41<01:09,  6.67it/s]Ref scores:  54%|█████▎    | 536/1000 [01:41<01:10,  6.59it/s]Ref scores:  54%|█████▎    | 537/1000 [01:41<01:08,  6.76it/s]Ref scores:  54%|█████▍    | 538/1000 [01:41<01:07,  6.86it/s]Ref scores:  54%|█████▍    | 539/1000 [01:42<01:31,  5.02it/s]Ref scores:  54%|█████▍    | 540/1000 [01:42<01:23,  5.54it/s]Ref scores:  54%|█████▍    | 541/1000 [01:42<01:17,  5.92it/s]Ref scores:  54%|█████▍    | 542/1000 [01:42<01:13,  6.21it/s]Ref scores:  54%|█████▍    | 543/1000 [01:42<01:20,  5.65it/s]Ref scores:  54%|█████▍    | 544/1000 [01:43<01:18,  5.79it/s]Ref scores:  55%|█████▍    | 545/1000 [01:43<01:14,  6.10it/s]Ref scores:  55%|█████▍    | 546/1000 [01:43<01:10,  6.40it/s]Ref scores:  55%|█████▍    | 547/1000 [01:43<01:18,  5.75it/s]Ref scores:  55%|█████▍    | 548/1000 [01:43<01:13,  6.12it/s]Ref scores:  55%|█████▍    | 549/1000 [01:43<01:09,  6.52it/s]Ref scores:  55%|█████▌    | 550/1000 [01:44<01:16,  5.89it/s]Ref scores:  55%|█████▌    | 551/1000 [01:44<01:12,  6.19it/s]Ref scores:  55%|█████▌    | 552/1000 [01:44<01:11,  6.31it/s]Ref scores:  55%|█████▌    | 553/1000 [01:44<01:08,  6.48it/s]Ref scores:  55%|█████▌    | 554/1000 [01:44<01:17,  5.78it/s]Ref scores:  56%|█████▌    | 555/1000 [01:44<01:13,  6.08it/s]Ref scores:  56%|█████▌    | 556/1000 [01:44<01:10,  6.30it/s]Ref scores:  56%|█████▌    | 557/1000 [01:45<01:24,  5.24it/s]Ref scores:  56%|█████▌    | 558/1000 [01:45<01:27,  5.07it/s]Ref scores:  56%|█████▌    | 559/1000 [01:45<01:19,  5.51it/s]Ref scores:  56%|█████▌    | 560/1000 [01:45<01:15,  5.86it/s]Ref scores:  56%|█████▌    | 561/1000 [01:45<01:20,  5.48it/s]Ref scores:  56%|█████▌    | 562/1000 [01:46<01:15,  5.82it/s]Ref scores:  56%|█████▋    | 563/1000 [01:46<01:19,  5.48it/s]Ref scores:  56%|█████▋    | 564/1000 [01:46<01:14,  5.86it/s]Ref scores:  56%|█████▋    | 565/1000 [01:46<01:19,  5.50it/s]Ref scores:  57%|█████▋    | 566/1000 [01:46<01:13,  5.89it/s]Ref scores:  57%|█████▋    | 567/1000 [01:46<01:10,  6.16it/s]Ref scores:  57%|█████▋    | 568/1000 [01:47<01:18,  5.48it/s]Ref scores:  57%|█████▋    | 569/1000 [01:47<01:28,  4.88it/s]Ref scores:  57%|█████▋    | 570/1000 [01:47<01:19,  5.38it/s]Ref scores:  57%|█████▋    | 571/1000 [01:47<01:21,  5.24it/s]Ref scores:  57%|█████▋    | 572/1000 [01:47<01:15,  5.66it/s]Ref scores:  57%|█████▋    | 573/1000 [01:48<01:11,  6.00it/s]Ref scores:  57%|█████▋    | 574/1000 [01:48<01:08,  6.24it/s]Ref scores:  57%|█████▊    | 575/1000 [01:48<01:26,  4.90it/s]Ref scores:  58%|█████▊    | 576/1000 [01:48<01:14,  5.72it/s]Ref scores:  58%|█████▊    | 577/1000 [01:48<01:08,  6.21it/s]Ref scores:  58%|█████▊    | 578/1000 [01:48<01:05,  6.46it/s]Ref scores:  58%|█████▊    | 579/1000 [01:49<01:03,  6.63it/s]Ref scores:  58%|█████▊    | 580/1000 [01:49<01:02,  6.71it/s]Ref scores:  58%|█████▊    | 581/1000 [01:49<01:19,  5.26it/s]Ref scores:  58%|█████▊    | 582/1000 [01:49<01:13,  5.68it/s]Ref scores:  58%|█████▊    | 583/1000 [01:49<01:09,  6.03it/s]Ref scores:  58%|█████▊    | 584/1000 [01:49<01:05,  6.31it/s]Ref scores:  58%|█████▊    | 585/1000 [01:50<01:03,  6.51it/s]Ref scores:  59%|█████▊    | 586/1000 [01:50<01:01,  6.68it/s]Ref scores:  59%|█████▊    | 587/1000 [01:50<01:02,  6.56it/s]Ref scores:  59%|█████▉    | 588/1000 [01:50<01:01,  6.65it/s]Ref scores:  59%|█████▉    | 589/1000 [01:50<01:01,  6.73it/s]Ref scores:  59%|█████▉    | 590/1000 [01:50<01:00,  6.79it/s]Ref scores:  59%|█████▉    | 591/1000 [01:50<00:59,  6.86it/s]Ref scores:  59%|█████▉    | 592/1000 [01:51<00:59,  6.90it/s]Ref scores:  59%|█████▉    | 593/1000 [01:51<00:59,  6.85it/s]Ref scores:  59%|█████▉    | 594/1000 [01:51<00:58,  6.94it/s]Ref scores:  60%|█████▉    | 595/1000 [01:51<00:57,  7.00it/s]Ref scores:  60%|█████▉    | 596/1000 [01:51<00:58,  6.96it/s]Ref scores:  60%|█████▉    | 597/1000 [01:51<00:57,  6.96it/s]Ref scores:  60%|█████▉    | 598/1000 [01:51<00:57,  6.98it/s]Ref scores:  60%|█████▉    | 599/1000 [01:52<01:04,  6.23it/s]Ref scores:  60%|██████    | 600/1000 [01:52<01:01,  6.47it/s]Ref scores:  60%|██████    | 601/1000 [01:52<01:02,  6.37it/s]Ref scores:  60%|██████    | 602/1000 [01:52<01:09,  5.69it/s]Ref scores:  60%|██████    | 603/1000 [01:52<01:05,  6.02it/s]Ref scores:  60%|██████    | 604/1000 [01:53<01:18,  5.05it/s]Ref scores:  60%|██████    | 605/1000 [01:53<01:20,  4.91it/s]Ref scores:  61%|██████    | 606/1000 [01:53<01:13,  5.37it/s]Ref scores:  61%|██████    | 607/1000 [01:53<01:16,  5.13it/s]Ref scores:  61%|██████    | 608/1000 [01:53<01:10,  5.59it/s]Ref scores:  61%|██████    | 609/1000 [01:53<01:06,  5.92it/s]Ref scores:  61%|██████    | 610/1000 [01:54<01:02,  6.21it/s]Ref scores:  61%|██████    | 611/1000 [01:54<01:00,  6.40it/s]Ref scores:  61%|██████    | 612/1000 [01:54<00:58,  6.59it/s]Ref scores:  61%|██████▏   | 613/1000 [01:54<01:05,  5.93it/s]Ref scores:  61%|██████▏   | 614/1000 [01:54<01:02,  6.21it/s]Ref scores:  62%|██████▏   | 615/1000 [01:54<00:59,  6.42it/s]Ref scores:  62%|██████▏   | 616/1000 [01:54<00:58,  6.52it/s]Ref scores:  62%|██████▏   | 617/1000 [01:55<00:58,  6.56it/s]Ref scores:  62%|██████▏   | 618/1000 [01:55<00:57,  6.64it/s]Ref scores:  62%|██████▏   | 619/1000 [01:55<00:56,  6.77it/s]Ref scores:  62%|██████▏   | 620/1000 [01:55<01:09,  5.46it/s]Ref scores:  62%|██████▏   | 621/1000 [01:55<01:04,  5.86it/s]Ref scores:  62%|██████▏   | 622/1000 [01:55<01:01,  6.19it/s]Ref scores:  62%|██████▏   | 623/1000 [01:56<00:58,  6.44it/s]Ref scores:  62%|██████▏   | 624/1000 [01:56<00:56,  6.61it/s]Ref scores:  62%|██████▎   | 625/1000 [01:56<00:56,  6.67it/s]Ref scores:  63%|██████▎   | 626/1000 [01:56<01:03,  5.86it/s]Ref scores:  63%|██████▎   | 627/1000 [01:56<01:00,  6.16it/s]Ref scores:  63%|██████▎   | 628/1000 [01:56<00:58,  6.38it/s]Ref scores:  63%|██████▎   | 629/1000 [01:57<00:56,  6.57it/s]Ref scores:  63%|██████▎   | 630/1000 [01:57<01:08,  5.40it/s]Ref scores:  63%|██████▎   | 631/1000 [01:57<01:03,  5.83it/s]Ref scores:  63%|██████▎   | 632/1000 [01:57<01:00,  6.13it/s]Ref scores:  63%|██████▎   | 633/1000 [01:57<01:05,  5.62it/s]Ref scores:  63%|██████▎   | 634/1000 [01:57<01:00,  6.01it/s]Ref scores:  64%|██████▎   | 635/1000 [01:58<00:58,  6.26it/s]Ref scores:  64%|██████▎   | 636/1000 [01:58<00:54,  6.64it/s]Ref scores:  64%|██████▎   | 637/1000 [01:58<00:53,  6.74it/s]Ref scores:  64%|██████▍   | 638/1000 [01:58<00:52,  6.86it/s]Ref scores:  64%|██████▍   | 639/1000 [01:58<00:52,  6.93it/s]Ref scores:  64%|██████▍   | 640/1000 [01:58<01:00,  5.96it/s]Ref scores:  64%|██████▍   | 641/1000 [01:59<00:57,  6.21it/s]Ref scores:  64%|██████▍   | 642/1000 [01:59<00:55,  6.43it/s]Ref scores:  64%|██████▍   | 643/1000 [01:59<01:02,  5.70it/s]Ref scores:  64%|██████▍   | 644/1000 [01:59<00:58,  6.04it/s]Ref scores:  64%|██████▍   | 645/1000 [01:59<00:58,  6.10it/s]Ref scores:  65%|██████▍   | 646/1000 [01:59<00:55,  6.36it/s]Ref scores:  65%|██████▍   | 647/1000 [02:00<01:06,  5.31it/s]Ref scores:  65%|██████▍   | 648/1000 [02:00<01:01,  5.71it/s]Ref scores:  65%|██████▍   | 649/1000 [02:00<00:58,  5.95it/s]Ref scores:  65%|██████▌   | 650/1000 [02:00<00:56,  6.23it/s]Ref scores:  65%|██████▌   | 651/1000 [02:00<01:01,  5.71it/s]Ref scores:  65%|██████▌   | 652/1000 [02:00<00:57,  6.10it/s]Ref scores:  65%|██████▌   | 653/1000 [02:01<00:54,  6.39it/s]Ref scores:  65%|██████▌   | 654/1000 [02:01<00:52,  6.54it/s]Ref scores:  66%|██████▌   | 655/1000 [02:01<01:03,  5.46it/s]Ref scores:  66%|██████▌   | 656/1000 [02:01<00:55,  6.23it/s]Ref scores:  66%|██████▌   | 657/1000 [02:01<01:04,  5.35it/s]Ref scores:  66%|██████▌   | 658/1000 [02:01<00:59,  5.77it/s]Ref scores:  66%|██████▌   | 659/1000 [02:02<00:56,  6.02it/s]Ref scores:  66%|██████▌   | 660/1000 [02:02<00:53,  6.35it/s]Ref scores:  66%|██████▌   | 661/1000 [02:02<00:51,  6.57it/s]Ref scores:  66%|██████▌   | 662/1000 [02:02<00:50,  6.75it/s]Ref scores:  66%|██████▋   | 663/1000 [02:02<00:45,  7.37it/s]Ref scores:  66%|██████▋   | 664/1000 [02:02<00:45,  7.33it/s]Ref scores:  66%|██████▋   | 665/1000 [02:02<00:43,  7.65it/s]Ref scores:  67%|██████▋   | 666/1000 [02:02<00:44,  7.45it/s]Ref scores:  67%|██████▋   | 667/1000 [02:03<00:51,  6.50it/s]Ref scores:  67%|██████▋   | 668/1000 [02:03<00:49,  6.67it/s]Ref scores:  67%|██████▋   | 669/1000 [02:03<01:03,  5.20it/s]Ref scores:  67%|██████▋   | 670/1000 [02:03<00:58,  5.67it/s]Ref scores:  67%|██████▋   | 671/1000 [02:04<01:12,  4.54it/s]Ref scores:  67%|██████▋   | 672/1000 [02:04<01:15,  4.34it/s]Ref scores:  67%|██████▋   | 673/1000 [02:04<01:12,  4.49it/s]Ref scores:  67%|██████▋   | 674/1000 [02:04<01:04,  5.03it/s]Ref scores:  68%|██████▊   | 675/1000 [02:04<00:59,  5.43it/s]Ref scores:  68%|██████▊   | 676/1000 [02:04<00:55,  5.88it/s]Ref scores:  68%|██████▊   | 677/1000 [02:05<01:03,  5.06it/s]Ref scores:  68%|██████▊   | 678/1000 [02:05<01:05,  4.95it/s]Ref scores:  68%|██████▊   | 679/1000 [02:05<01:06,  4.85it/s]Ref scores:  68%|██████▊   | 680/1000 [02:05<01:06,  4.84it/s]Ref scores:  68%|██████▊   | 681/1000 [02:06<01:10,  4.53it/s]Ref scores:  68%|██████▊   | 682/1000 [02:06<01:09,  4.60it/s]Ref scores:  68%|██████▊   | 683/1000 [02:06<01:19,  4.01it/s]Ref scores:  68%|██████▊   | 684/1000 [02:06<01:08,  4.63it/s]Ref scores:  68%|██████▊   | 685/1000 [02:06<01:00,  5.18it/s]Ref scores:  69%|██████▊   | 686/1000 [02:07<01:02,  5.05it/s]Ref scores:  69%|██████▊   | 687/1000 [02:07<00:55,  5.62it/s]Ref scores:  69%|██████▉   | 688/1000 [02:07<00:49,  6.36it/s]Ref scores:  69%|██████▉   | 689/1000 [02:07<00:53,  5.77it/s]Ref scores:  69%|██████▉   | 690/1000 [02:07<00:50,  6.10it/s]Ref scores:  69%|██████▉   | 691/1000 [02:07<00:48,  6.35it/s]Ref scores:  69%|██████▉   | 692/1000 [02:07<00:44,  6.98it/s]Ref scores:  69%|██████▉   | 693/1000 [02:08<00:43,  6.98it/s]Ref scores:  69%|██████▉   | 694/1000 [02:08<00:43,  7.06it/s]Ref scores:  70%|██████▉   | 695/1000 [02:08<00:43,  6.94it/s]Ref scores:  70%|██████▉   | 696/1000 [02:08<00:43,  6.92it/s]Ref scores:  70%|██████▉   | 697/1000 [02:08<00:40,  7.45it/s]Ref scores:  70%|██████▉   | 698/1000 [02:08<00:41,  7.28it/s]Ref scores:  70%|██████▉   | 699/1000 [02:08<00:41,  7.21it/s]Ref scores:  70%|███████   | 700/1000 [02:09<00:41,  7.20it/s]Ref scores:  70%|███████   | 701/1000 [02:09<00:48,  6.13it/s]Ref scores:  70%|███████   | 702/1000 [02:09<00:46,  6.34it/s]Ref scores:  70%|███████   | 703/1000 [02:09<00:44,  6.68it/s]Ref scores:  70%|███████   | 704/1000 [02:09<00:50,  5.86it/s]Ref scores:  70%|███████   | 705/1000 [02:10<00:57,  5.13it/s]Ref scores:  71%|███████   | 706/1000 [02:10<00:53,  5.51it/s]Ref scores:  71%|███████   | 707/1000 [02:10<00:50,  5.81it/s]Ref scores:  71%|███████   | 708/1000 [02:10<00:47,  6.13it/s]Ref scores:  71%|███████   | 709/1000 [02:10<00:46,  6.24it/s]Ref scores:  71%|███████   | 710/1000 [02:10<00:45,  6.44it/s]Ref scores:  71%|███████   | 711/1000 [02:11<00:50,  5.74it/s]Ref scores:  71%|███████   | 712/1000 [02:11<01:00,  4.72it/s]Ref scores:  71%|███████▏  | 713/1000 [02:11<00:54,  5.22it/s]Ref scores:  71%|███████▏  | 714/1000 [02:11<00:50,  5.65it/s]Ref scores:  72%|███████▏  | 715/1000 [02:11<00:52,  5.39it/s]Ref scores:  72%|███████▏  | 716/1000 [02:12<00:54,  5.18it/s]Ref scores:  72%|███████▏  | 717/1000 [02:12<01:06,  4.26it/s]Ref scores:  72%|███████▏  | 718/1000 [02:12<00:58,  4.84it/s]Ref scores:  72%|███████▏  | 719/1000 [02:12<00:58,  4.82it/s]Ref scores:  72%|███████▏  | 720/1000 [02:12<00:57,  4.83it/s]Ref scores:  72%|███████▏  | 721/1000 [02:13<00:52,  5.32it/s]Ref scores:  72%|███████▏  | 722/1000 [02:13<00:54,  5.14it/s]Ref scores:  72%|███████▏  | 723/1000 [02:13<00:46,  5.90it/s]Ref scores:  72%|███████▏  | 724/1000 [02:13<00:44,  6.20it/s]Ref scores:  72%|███████▎  | 725/1000 [02:13<00:42,  6.40it/s]Ref scores:  73%|███████▎  | 726/1000 [02:13<00:41,  6.54it/s]Ref scores:  73%|███████▎  | 727/1000 [02:13<00:40,  6.67it/s]Ref scores:  73%|███████▎  | 728/1000 [02:14<00:37,  7.22it/s]Ref scores:  73%|███████▎  | 729/1000 [02:14<00:38,  7.06it/s]Ref scores:  73%|███████▎  | 730/1000 [02:14<00:38,  7.06it/s]Ref scores:  73%|███████▎  | 731/1000 [02:14<00:43,  6.13it/s]Ref scores:  73%|███████▎  | 732/1000 [02:14<00:42,  6.33it/s]Ref scores:  73%|███████▎  | 733/1000 [02:14<00:41,  6.47it/s]Ref scores:  73%|███████▎  | 734/1000 [02:15<00:40,  6.49it/s]Ref scores:  74%|███████▎  | 735/1000 [02:15<00:39,  6.68it/s]Ref scores:  74%|███████▎  | 736/1000 [02:15<00:40,  6.54it/s]Ref scores:  74%|███████▎  | 737/1000 [02:15<00:57,  4.58it/s]Ref scores:  74%|███████▍  | 738/1000 [02:15<01:00,  4.36it/s]Ref scores:  74%|███████▍  | 739/1000 [02:16<00:53,  4.89it/s]Ref scores:  74%|███████▍  | 740/1000 [02:16<00:48,  5.40it/s]Ref scores:  74%|███████▍  | 741/1000 [02:16<00:44,  5.81it/s]Ref scores:  74%|███████▍  | 742/1000 [02:16<00:46,  5.49it/s]Ref scores:  74%|███████▍  | 743/1000 [02:16<00:43,  5.89it/s]Ref scores:  74%|███████▍  | 744/1000 [02:16<00:42,  6.02it/s]Ref scores:  74%|███████▍  | 745/1000 [02:17<00:41,  6.17it/s]Ref scores:  75%|███████▍  | 746/1000 [02:17<00:42,  5.96it/s]Ref scores:  75%|███████▍  | 747/1000 [02:17<00:44,  5.70it/s]Ref scores:  75%|███████▍  | 748/1000 [02:17<00:50,  5.00it/s]Ref scores:  75%|███████▍  | 749/1000 [02:17<00:59,  4.25it/s]Ref scores:  75%|███████▌  | 750/1000 [02:18<00:54,  4.61it/s]Ref scores:  75%|███████▌  | 751/1000 [02:18<00:51,  4.83it/s]Ref scores:  75%|███████▌  | 752/1000 [02:18<00:48,  5.13it/s]Ref scores:  75%|███████▌  | 753/1000 [02:18<00:45,  5.40it/s]Ref scores:  75%|███████▌  | 754/1000 [02:18<00:45,  5.42it/s]Ref scores:  76%|███████▌  | 755/1000 [02:19<00:45,  5.37it/s]Ref scores:  76%|███████▌  | 756/1000 [02:19<00:44,  5.45it/s]Ref scores:  76%|███████▌  | 757/1000 [02:19<00:45,  5.38it/s]Ref scores:  76%|███████▌  | 758/1000 [02:19<00:43,  5.56it/s]Ref scores:  76%|███████▌  | 759/1000 [02:19<00:43,  5.49it/s]Ref scores:  76%|███████▌  | 760/1000 [02:19<00:43,  5.46it/s]Ref scores:  76%|███████▌  | 761/1000 [02:20<00:43,  5.47it/s]Ref scores:  76%|███████▌  | 762/1000 [02:20<00:42,  5.63it/s]Ref scores:  76%|███████▋  | 763/1000 [02:20<00:42,  5.61it/s]Ref scores:  76%|███████▋  | 764/1000 [02:20<00:42,  5.60it/s]Ref scores:  76%|███████▋  | 765/1000 [02:20<00:41,  5.62it/s]Ref scores:  77%|███████▋  | 766/1000 [02:21<00:48,  4.86it/s]Ref scores:  77%|███████▋  | 767/1000 [02:21<00:48,  4.81it/s]Ref scores:  77%|███████▋  | 768/1000 [02:21<00:46,  4.95it/s]Ref scores:  77%|███████▋  | 769/1000 [02:21<00:44,  5.19it/s]Ref scores:  77%|███████▋  | 770/1000 [02:21<00:42,  5.44it/s]Ref scores:  77%|███████▋  | 771/1000 [02:22<00:41,  5.47it/s]Ref scores:  77%|███████▋  | 772/1000 [02:22<00:41,  5.47it/s]Ref scores:  77%|███████▋  | 773/1000 [02:22<00:45,  4.96it/s]Ref scores:  77%|███████▋  | 774/1000 [02:22<00:48,  4.65it/s]Ref scores:  78%|███████▊  | 775/1000 [02:22<00:50,  4.47it/s]Ref scores:  78%|███████▊  | 776/1000 [02:23<00:47,  4.69it/s]Ref scores:  78%|███████▊  | 777/1000 [02:23<00:50,  4.39it/s]Ref scores:  78%|███████▊  | 778/1000 [02:23<00:45,  4.88it/s]Ref scores:  78%|███████▊  | 779/1000 [02:23<00:43,  5.12it/s]Ref scores:  78%|███████▊  | 780/1000 [02:23<00:41,  5.34it/s]Ref scores:  78%|███████▊  | 781/1000 [02:24<00:57,  3.80it/s]Ref scores:  78%|███████▊  | 782/1000 [02:24<00:58,  3.74it/s]Ref scores:  78%|███████▊  | 783/1000 [02:24<00:57,  3.76it/s]Ref scores:  78%|███████▊  | 784/1000 [02:25<01:02,  3.46it/s]Ref scores:  78%|███████▊  | 785/1000 [02:25<00:53,  4.00it/s]Ref scores:  79%|███████▊  | 786/1000 [02:25<00:49,  4.36it/s]Ref scores:  79%|███████▊  | 787/1000 [02:25<00:44,  4.73it/s]Ref scores:  79%|███████▉  | 788/1000 [02:25<00:42,  5.00it/s]Ref scores:  79%|███████▉  | 789/1000 [02:26<00:42,  4.97it/s]Ref scores:  79%|███████▉  | 790/1000 [02:26<00:44,  4.75it/s]Ref scores:  79%|███████▉  | 791/1000 [02:26<00:43,  4.81it/s]Ref scores:  79%|███████▉  | 792/1000 [02:26<00:42,  4.95it/s]Ref scores:  79%|███████▉  | 793/1000 [02:27<00:49,  4.19it/s]Ref scores:  79%|███████▉  | 794/1000 [02:27<01:06,  3.10it/s]Ref scores:  80%|███████▉  | 795/1000 [02:27<01:04,  3.19it/s]Ref scores:  80%|███████▉  | 796/1000 [02:28<01:00,  3.36it/s]Ref scores:  80%|███████▉  | 797/1000 [02:28<01:09,  2.93it/s]Ref scores:  80%|███████▉  | 798/1000 [02:29<01:19,  2.53it/s]Ref scores:  80%|███████▉  | 799/1000 [02:29<01:29,  2.26it/s]Ref scores:  80%|████████  | 800/1000 [02:30<01:32,  2.15it/s]Ref scores:  80%|████████  | 801/1000 [02:31<01:57,  1.69it/s]Ref scores:  80%|████████  | 802/1000 [02:32<02:26,  1.35it/s]Ref scores:  80%|████████  | 803/1000 [02:32<02:09,  1.52it/s]Ref scores:  80%|████████  | 804/1000 [02:32<01:42,  1.91it/s]Ref scores:  80%|████████  | 805/1000 [02:33<01:39,  1.95it/s]Ref scores:  81%|████████  | 806/1000 [02:33<01:41,  1.90it/s]Ref scores:  81%|████████  | 807/1000 [02:34<01:47,  1.79it/s]Ref scores:  81%|████████  | 808/1000 [02:34<01:44,  1.84it/s]Ref scores:  81%|████████  | 809/1000 [02:35<01:29,  2.13it/s]Ref scores:  81%|████████  | 810/1000 [02:35<01:16,  2.48it/s]Ref scores:  81%|████████  | 811/1000 [02:35<01:10,  2.68it/s]Ref scores:  81%|████████  | 812/1000 [02:36<01:00,  3.13it/s]Ref scores:  81%|████████▏ | 813/1000 [02:36<00:52,  3.55it/s]Ref scores:  81%|████████▏ | 814/1000 [02:36<00:55,  3.35it/s]Ref scores:  82%|████████▏ | 815/1000 [02:36<00:50,  3.67it/s]Ref scores:  82%|████████▏ | 816/1000 [02:36<00:46,  4.00it/s]Ref scores:  82%|████████▏ | 817/1000 [02:37<00:47,  3.88it/s]Ref scores:  82%|████████▏ | 818/1000 [02:37<00:45,  4.02it/s]Ref scores:  82%|████████▏ | 819/1000 [02:37<00:50,  3.59it/s]Ref scores:  82%|████████▏ | 820/1000 [02:38<00:52,  3.42it/s]Ref scores:  82%|████████▏ | 821/1000 [02:38<00:47,  3.78it/s]Ref scores:  82%|████████▏ | 822/1000 [02:38<00:45,  3.95it/s]Ref scores:  82%|████████▏ | 823/1000 [02:38<00:54,  3.23it/s]Ref scores:  82%|████████▏ | 824/1000 [02:39<00:51,  3.40it/s]Ref scores:  82%|████████▎ | 825/1000 [02:39<00:46,  3.76it/s]Ref scores:  83%|████████▎ | 826/1000 [02:39<00:53,  3.24it/s]Ref scores:  83%|████████▎ | 827/1000 [02:40<00:52,  3.28it/s]Ref scores:  83%|████████▎ | 828/1000 [02:40<00:46,  3.68it/s]Ref scores:  83%|████████▎ | 829/1000 [02:40<00:52,  3.26it/s]Ref scores:  83%|████████▎ | 830/1000 [02:40<00:48,  3.51it/s]Ref scores:  83%|████████▎ | 831/1000 [02:41<00:48,  3.50it/s]Ref scores:  83%|████████▎ | 832/1000 [02:41<00:45,  3.68it/s]Ref scores:  83%|████████▎ | 833/1000 [02:41<00:53,  3.15it/s]Ref scores:  83%|████████▎ | 834/1000 [02:42<00:56,  2.95it/s]Ref scores:  84%|████████▎ | 835/1000 [02:42<00:53,  3.09it/s]Ref scores:  84%|████████▎ | 836/1000 [02:42<00:47,  3.43it/s]Ref scores:  84%|████████▎ | 837/1000 [02:43<00:46,  3.52it/s]Ref scores:  84%|████████▍ | 838/1000 [02:43<00:44,  3.65it/s]Ref scores:  84%|████████▍ | 839/1000 [02:43<00:41,  3.87it/s]Ref scores:  84%|████████▍ | 840/1000 [02:43<00:40,  4.00it/s]Ref scores:  84%|████████▍ | 841/1000 [02:44<00:41,  3.80it/s]Ref scores:  84%|████████▍ | 842/1000 [02:44<00:47,  3.35it/s]Ref scores:  84%|████████▍ | 843/1000 [02:44<00:47,  3.31it/s]Ref scores:  84%|████████▍ | 844/1000 [02:44<00:41,  3.77it/s]Ref scores:  84%|████████▍ | 845/1000 [02:45<00:35,  4.33it/s]Ref scores:  85%|████████▍ | 846/1000 [02:45<00:33,  4.64it/s]Ref scores:  85%|████████▍ | 847/1000 [02:45<00:31,  4.89it/s]Ref scores:  85%|████████▍ | 848/1000 [02:45<00:36,  4.14it/s]Ref scores:  85%|████████▍ | 849/1000 [02:46<00:36,  4.19it/s]Ref scores:  85%|████████▌ | 850/1000 [02:46<00:32,  4.69it/s]Ref scores:  85%|████████▌ | 851/1000 [02:46<00:32,  4.56it/s]Ref scores:  85%|████████▌ | 852/1000 [02:46<00:28,  5.11it/s]Ref scores:  85%|████████▌ | 853/1000 [02:46<00:26,  5.53it/s]Ref scores:  85%|████████▌ | 854/1000 [02:46<00:23,  6.29it/s]Ref scores:  86%|████████▌ | 855/1000 [02:47<00:25,  5.74it/s]Ref scores:  86%|████████▌ | 856/1000 [02:47<00:23,  6.22it/s]Ref scores:  86%|████████▌ | 857/1000 [02:47<00:22,  6.46it/s]Ref scores:  86%|████████▌ | 858/1000 [02:47<00:21,  6.67it/s]Ref scores:  86%|████████▌ | 859/1000 [02:47<00:25,  5.49it/s]Ref scores:  86%|████████▌ | 860/1000 [02:47<00:23,  5.90it/s]Ref scores:  86%|████████▌ | 861/1000 [02:47<00:22,  6.19it/s]Ref scores:  86%|████████▌ | 862/1000 [02:48<00:24,  5.69it/s]Ref scores:  86%|████████▋ | 863/1000 [02:48<00:22,  6.01it/s]Ref scores:  86%|████████▋ | 864/1000 [02:48<00:21,  6.31it/s]Ref scores:  86%|████████▋ | 865/1000 [02:48<00:23,  5.74it/s]Ref scores:  87%|████████▋ | 866/1000 [02:48<00:22,  6.01it/s]Ref scores:  87%|████████▋ | 867/1000 [02:48<00:21,  6.28it/s]Ref scores:  87%|████████▋ | 868/1000 [02:49<00:20,  6.54it/s]Ref scores:  87%|████████▋ | 869/1000 [02:49<00:22,  5.77it/s]Ref scores:  87%|████████▋ | 870/1000 [02:49<00:21,  6.06it/s]Ref scores:  87%|████████▋ | 871/1000 [02:49<00:19,  6.73it/s]Ref scores:  87%|████████▋ | 872/1000 [02:49<00:18,  6.85it/s]Ref scores:  87%|████████▋ | 873/1000 [02:49<00:18,  6.82it/s]Ref scores:  87%|████████▋ | 874/1000 [02:50<00:18,  6.86it/s]Ref scores:  88%|████████▊ | 875/1000 [02:50<00:18,  6.90it/s]Ref scores:  88%|████████▊ | 876/1000 [02:50<00:17,  6.94it/s]Ref scores:  88%|████████▊ | 877/1000 [02:50<00:17,  6.95it/s]Ref scores:  88%|████████▊ | 878/1000 [02:50<00:17,  6.97it/s]Ref scores:  88%|████████▊ | 879/1000 [02:50<00:21,  5.53it/s]Ref scores:  88%|████████▊ | 880/1000 [02:51<00:24,  4.87it/s]Ref scores:  88%|████████▊ | 881/1000 [02:51<00:22,  5.31it/s]Ref scores:  88%|████████▊ | 882/1000 [02:51<00:20,  5.85it/s]Ref scores:  88%|████████▊ | 883/1000 [02:51<00:18,  6.16it/s]Ref scores:  88%|████████▊ | 884/1000 [02:51<00:22,  5.26it/s]Ref scores:  88%|████████▊ | 885/1000 [02:51<00:20,  5.71it/s]Ref scores:  89%|████████▊ | 886/1000 [02:52<00:18,  6.04it/s]Ref scores:  89%|████████▊ | 887/1000 [02:52<00:22,  4.97it/s]Ref scores:  89%|████████▉ | 888/1000 [02:52<00:20,  5.48it/s]Ref scores:  89%|████████▉ | 889/1000 [02:52<00:18,  6.01it/s]Ref scores:  89%|████████▉ | 890/1000 [02:52<00:16,  6.71it/s]Ref scores:  89%|████████▉ | 891/1000 [02:52<00:16,  6.65it/s]Ref scores:  89%|████████▉ | 892/1000 [02:53<00:15,  6.76it/s]Ref scores:  89%|████████▉ | 893/1000 [02:53<00:15,  6.90it/s]Ref scores:  89%|████████▉ | 894/1000 [02:53<00:15,  6.97it/s]Ref scores:  90%|████████▉ | 895/1000 [02:53<00:15,  6.99it/s]Ref scores:  90%|████████▉ | 896/1000 [02:53<00:13,  7.51it/s]Ref scores:  90%|████████▉ | 897/1000 [02:53<00:13,  7.38it/s]Ref scores:  90%|████████▉ | 898/1000 [02:53<00:14,  7.24it/s]Ref scores:  90%|████████▉ | 899/1000 [02:53<00:14,  6.97it/s]Ref scores:  90%|█████████ | 900/1000 [02:54<00:16,  6.10it/s]Ref scores:  90%|█████████ | 901/1000 [02:54<00:15,  6.35it/s]Ref scores:  90%|█████████ | 902/1000 [02:54<00:14,  6.61it/s]Ref scores:  90%|█████████ | 903/1000 [02:54<00:14,  6.72it/s]Ref scores:  90%|█████████ | 904/1000 [02:54<00:14,  6.73it/s]Ref scores:  90%|█████████ | 905/1000 [02:54<00:14,  6.77it/s]Ref scores:  91%|█████████ | 906/1000 [02:55<00:13,  6.81it/s]Ref scores:  91%|█████████ | 907/1000 [02:55<00:13,  6.78it/s]Ref scores:  91%|█████████ | 908/1000 [02:55<00:15,  5.98it/s]Ref scores:  91%|█████████ | 909/1000 [02:55<00:14,  6.23it/s]Ref scores:  91%|█████████ | 910/1000 [02:55<00:14,  6.40it/s]Ref scores:  91%|█████████ | 911/1000 [02:55<00:13,  6.59it/s]Ref scores:  91%|█████████ | 912/1000 [02:56<00:15,  5.78it/s]Ref scores:  91%|█████████▏| 913/1000 [02:56<00:16,  5.42it/s]Ref scores:  91%|█████████▏| 914/1000 [02:56<00:19,  4.40it/s]Ref scores:  92%|█████████▏| 915/1000 [02:56<00:17,  4.94it/s]Ref scores:  92%|█████████▏| 916/1000 [02:56<00:14,  5.68it/s]Ref scores:  92%|█████████▏| 917/1000 [02:57<00:13,  6.03it/s]Ref scores:  92%|█████████▏| 918/1000 [02:57<00:13,  6.30it/s]Ref scores:  92%|█████████▏| 919/1000 [02:57<00:12,  6.47it/s]Ref scores:  92%|█████████▏| 920/1000 [02:57<00:12,  6.57it/s]Ref scores:  92%|█████████▏| 921/1000 [02:57<00:13,  5.79it/s]Ref scores:  92%|█████████▏| 922/1000 [02:57<00:12,  6.08it/s]Ref scores:  92%|█████████▏| 923/1000 [02:58<00:13,  5.58it/s]Ref scores:  92%|█████████▏| 924/1000 [02:58<00:15,  4.96it/s]Ref scores:  92%|█████████▎| 925/1000 [02:58<00:13,  5.40it/s]Ref scores:  93%|█████████▎| 926/1000 [02:58<00:12,  5.76it/s]Ref scores:  93%|█████████▎| 927/1000 [02:58<00:13,  5.44it/s]Ref scores:  93%|█████████▎| 928/1000 [02:58<00:12,  5.79it/s]Ref scores:  93%|█████████▎| 929/1000 [02:59<00:11,  5.94it/s]Ref scores:  93%|█████████▎| 930/1000 [02:59<00:12,  5.54it/s]Ref scores:  93%|█████████▎| 931/1000 [02:59<00:11,  5.91it/s]Ref scores:  93%|█████████▎| 932/1000 [02:59<00:10,  6.20it/s]Ref scores:  93%|█████████▎| 933/1000 [02:59<00:10,  6.41it/s]Ref scores:  93%|█████████▎| 934/1000 [02:59<00:10,  6.56it/s]Ref scores:  94%|█████████▎| 935/1000 [03:00<00:10,  6.40it/s]Ref scores:  94%|█████████▎| 936/1000 [03:00<00:09,  6.54it/s]Ref scores:  94%|█████████▎| 937/1000 [03:00<00:08,  7.15it/s]Ref scores:  94%|█████████▍| 938/1000 [03:00<00:08,  6.93it/s]Ref scores:  94%|█████████▍| 939/1000 [03:00<00:09,  6.66it/s]Ref scores:  94%|█████████▍| 940/1000 [03:00<00:11,  5.45it/s]Ref scores:  94%|█████████▍| 941/1000 [03:01<00:12,  4.87it/s]Ref scores:  94%|█████████▍| 942/1000 [03:01<00:14,  4.09it/s]Ref scores:  94%|█████████▍| 943/1000 [03:01<00:12,  4.58it/s]Ref scores:  94%|█████████▍| 944/1000 [03:01<00:10,  5.11it/s]Ref scores:  94%|█████████▍| 945/1000 [03:01<00:09,  5.57it/s]Ref scores:  95%|█████████▍| 946/1000 [03:02<00:09,  5.92it/s]Ref scores:  95%|█████████▍| 947/1000 [03:02<00:08,  6.20it/s]Ref scores:  95%|█████████▍| 948/1000 [03:02<00:08,  6.27it/s]Ref scores:  95%|█████████▍| 949/1000 [03:02<00:09,  5.64it/s]Ref scores:  95%|█████████▌| 950/1000 [03:02<00:08,  5.95it/s]Ref scores:  95%|█████████▌| 951/1000 [03:02<00:07,  6.24it/s]Ref scores:  95%|█████████▌| 952/1000 [03:03<00:07,  6.46it/s]Ref scores:  95%|█████████▌| 953/1000 [03:03<00:07,  6.60it/s]Ref scores:  95%|█████████▌| 954/1000 [03:03<00:06,  6.63it/s]Ref scores:  96%|█████████▌| 955/1000 [03:03<00:06,  6.76it/s]Ref scores:  96%|█████████▌| 956/1000 [03:03<00:06,  6.84it/s]Ref scores:  96%|█████████▌| 957/1000 [03:03<00:07,  5.97it/s]Ref scores:  96%|█████████▌| 958/1000 [03:03<00:06,  6.27it/s]Ref scores:  96%|█████████▌| 959/1000 [03:04<00:06,  6.24it/s]Ref scores:  96%|█████████▌| 960/1000 [03:04<00:07,  5.57it/s]Ref scores:  96%|█████████▌| 961/1000 [03:04<00:07,  5.21it/s]Ref scores:  96%|█████████▌| 962/1000 [03:04<00:06,  5.64it/s]Ref scores:  96%|█████████▋| 963/1000 [03:04<00:06,  5.36it/s]Ref scores:  96%|█████████▋| 964/1000 [03:05<00:07,  4.78it/s]Ref scores:  96%|█████████▋| 965/1000 [03:05<00:06,  5.41it/s]Ref scores:  97%|█████████▋| 966/1000 [03:05<00:06,  5.12it/s]Ref scores:  97%|█████████▋| 967/1000 [03:05<00:06,  5.03it/s]Ref scores:  97%|█████████▋| 968/1000 [03:05<00:05,  5.47it/s]Ref scores:  97%|█████████▋| 969/1000 [03:05<00:05,  5.89it/s]Ref scores:  97%|█████████▋| 970/1000 [03:06<00:05,  5.54it/s]Ref scores:  97%|█████████▋| 971/1000 [03:06<00:04,  5.93it/s]Ref scores:  97%|█████████▋| 972/1000 [03:06<00:05,  5.55it/s]Ref scores:  97%|█████████▋| 973/1000 [03:06<00:05,  5.35it/s]Ref scores:  97%|█████████▋| 974/1000 [03:07<00:05,  4.59it/s]Ref scores:  98%|█████████▊| 975/1000 [03:07<00:04,  5.21it/s]Ref scores:  98%|█████████▊| 976/1000 [03:07<00:04,  5.64it/s]Ref scores:  98%|█████████▊| 977/1000 [03:07<00:04,  5.37it/s]Ref scores:  98%|█████████▊| 978/1000 [03:07<00:03,  5.65it/s]Ref scores:  98%|█████████▊| 979/1000 [03:07<00:03,  5.94it/s]Ref scores:  98%|█████████▊| 980/1000 [03:08<00:03,  5.61it/s]Ref scores:  98%|█████████▊| 981/1000 [03:08<00:03,  5.98it/s]Ref scores:  98%|█████████▊| 982/1000 [03:08<00:02,  6.22it/s]Ref scores:  98%|█████████▊| 983/1000 [03:08<00:03,  5.59it/s]Ref scores:  98%|█████████▊| 984/1000 [03:08<00:02,  5.93it/s]Ref scores:  98%|█████████▊| 985/1000 [03:08<00:02,  5.57it/s]Ref scores:  99%|█████████▊| 986/1000 [03:09<00:02,  5.88it/s]Ref scores:  99%|█████████▊| 987/1000 [03:09<00:02,  6.34it/s]Ref scores:  99%|█████████▉| 988/1000 [03:09<00:01,  6.70it/s]Ref scores:  99%|█████████▉| 989/1000 [03:09<00:01,  6.78it/s]Ref scores:  99%|█████████▉| 990/1000 [03:09<00:01,  7.36it/s]Ref scores:  99%|█████████▉| 991/1000 [03:09<00:01,  7.23it/s]Ref scores:  99%|█████████▉| 992/1000 [03:09<00:01,  7.21it/s]Ref scores:  99%|█████████▉| 993/1000 [03:10<00:01,  5.67it/s]Ref scores:  99%|█████████▉| 994/1000 [03:10<00:00,  6.02it/s]Ref scores: 100%|█████████▉| 995/1000 [03:10<00:00,  6.26it/s]Ref scores: 100%|█████████▉| 996/1000 [03:10<00:00,  6.48it/s]Ref scores: 100%|█████████▉| 997/1000 [03:10<00:00,  6.64it/s]Ref scores: 100%|█████████▉| 998/1000 [03:10<00:00,  5.90it/s]Ref scores: 100%|█████████▉| 999/1000 [03:11<00:00,  6.22it/s]Ref scores: 100%|██████████| 1000/1000 [03:11<00:00,  6.89it/s]Ref scores: 100%|██████████| 1000/1000 [03:11<00:00,  5.23it/s]
DONE (1.90s)
DONE (9.18s)
loss_threshold ROC AUC: 0.577499, PR AUC: 0.5574278800280226, tpr_at_low_fpr: {0.001: 0.003, 0.01: 0.041}
min_k_threshold ROC AUC: 0.595629, PR AUC: 0.5836930654817198, tpr_at_low_fpr: {0.001: 0.003, 0.01: 0.05}
zlib_threshold ROC AUC: 0.49428399999999995, PR AUC: 0.4720865173738775, tpr_at_low_fpr: {0.001: 0.007, 0.01: 0.028}
ref-stablelm-base-alpha-3b-v2_threshold ROC AUC: 0.37307699999999994, PR AUC: 0.40502513318752054, tpr_at_low_fpr: {0.001: 0.003, 0.01: 0.007}
loss_threshold roc_auc: 0.577
min_k_threshold roc_auc: 0.596
zlib_threshold roc_auc: 0.494
ref-stablelm-base-alpha-3b-v2_threshold roc_auc: 0.373
Finished.
